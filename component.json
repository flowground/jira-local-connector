{
    "title": "JIRA 7.6.1",
    "docsUrl": "",
    "url": "https://api.apis.guru/v2/specs/jira.local/1.0.0/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "http://jira.local:8080/jira/rest/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "get_api_2_application_properties": {
            "main": "./lib/actions/get_api_2_application_properties.js",
            "title": "Returns an application property.",
            "description": "Returns an application property.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_application_properties.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAdvancedSettings": {
            "main": "./lib/actions/getAdvancedSettings.js",
            "title": "Returns the properties that are displayed on the \"General Configuration > Advanced Settings\" page.",
            "description": "Returns the properties that are displayed on the \"General Configuration > Advanced Settings\" page.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAdvancedSettings.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "setPropertyViaRestfulTable": {
            "main": "./lib/actions/setPropertyViaRestfulTable.js",
            "title": "Modify an application property via PUT. The \"value\" field present in the PUT will override the existing value.",
            "description": "Modify an application property via PUT. The \"value\" field present in the PUT will override the existing value.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/setPropertyViaRestfulTable.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAll": {
            "main": "./lib/actions/getAll.js",
            "title": "Returns all ApplicationRoles in the system. Will also return an ETag header containing a version hash of the\n collection of ApplicationRoles.",
            "description": "Returns all ApplicationRoles in the system. Will also return an ETag header containing a version hash of the\n collection of ApplicationRoles.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAll.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "putBulk": {
            "main": "./lib/actions/putBulk.js",
            "title": "Updates the ApplicationRoles with the passed data if the version hash is the same as the server.\n Only the groups and default groups setting of the role may be updated. Requests to change the key\n or the name of the role will be silently ignored. It is acceptable to pass only the roles that are updated\n as roles that are present in the server but not in data to update with, will not be deleted.",
            "description": "Updates the ApplicationRoles with the passed data if the version hash is the same as the server.\n Only the groups and default groups setting of the role may be updated. Requests to change the key\n or the name of the role will be silently ignored. It is acceptable to pass only the roles that are updated\n as roles that are present in the server but not in data to update with, will not be deleted.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/putBulk.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get": {
            "main": "./lib/actions/get.js",
            "title": "Returns the ApplicationRole with passed key if it exists.",
            "description": "Returns the ApplicationRole with passed key if it exists.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "put": {
            "main": "./lib/actions/put.js",
            "title": "Updates the ApplicationRole with the passed data. Only the groups and default groups setting of the\n role may be updated. Requests to change the key or the name of the role will be silently ignored.\n <p>\n Optional: If versionHash is passed through the If-Match header the request will be rejected if not the\n same as server",
            "description": "Updates the ApplicationRole with the passed data. Only the groups and default groups setting of the\n role may be updated. Requests to change the key or the name of the role will be silently ignored.\n <p>\n Optional: If versionHash is passed through the If-Match header the request will be rejected if not the\n same as server",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/put.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAttachmentMeta": {
            "main": "./lib/actions/getAttachmentMeta.js",
            "title": "Returns the meta information for an attachments, specifically if they are enabled and the maximum upload size\n allowed.",
            "description": "Returns the meta information for an attachments, specifically if they are enabled and the maximum upload size\n allowed.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAttachmentMeta.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "removeAttachment": {
            "main": "./lib/actions/removeAttachment.js",
            "title": "Remove an attachment from an issue.",
            "description": "Remove an attachment from an issue.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/removeAttachment.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAttachment": {
            "main": "./lib/actions/getAttachment.js",
            "title": "Returns the meta-data for an attachment, including the URI of the actual attached file.",
            "description": "Returns the meta-data for an attachment, including the URI of the actual attached file.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAttachment.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "expandForHumans": {
            "main": "./lib/actions/expandForHumans.js",
            "title": "Tries to expand an attachment. Output is human-readable and subject to change.",
            "description": "Tries to expand an attachment. Output is human-readable and subject to change.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/expandForHumans.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "expandForMachines": {
            "main": "./lib/actions/expandForMachines.js",
            "title": "Tries to expand an attachment. Output is raw and should be backwards-compatible through the course of time.",
            "description": "Tries to expand an attachment. Output is raw and should be backwards-compatible through the course of time.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/expandForMachines.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getRecords": {
            "main": "./lib/actions/getRecords.js",
            "title": "Returns auditing records filtered using provided parameters",
            "description": "Returns auditing records filtered using provided parameters",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getRecords.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "addRecord": {
            "main": "./lib/actions/addRecord.js",
            "title": "Store a record in Audit Log",
            "description": "Store a record in Audit Log",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addRecord.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAllSystemAvatars": {
            "main": "./lib/actions/getAllSystemAvatars.js",
            "title": "Returns all system avatars of the given type.",
            "description": "Returns all system avatars of the given type.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAllSystemAvatars.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "storeTemporaryAvatar": {
            "main": "./lib/actions/storeTemporaryAvatar.js",
            "title": "Creates temporary avatar",
            "description": "Creates temporary avatar",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/storeTemporaryAvatar.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "post_api_2_avatar__type__temporaryCrop": {
            "main": "./lib/actions/post_api_2_avatar__type__temporaryCrop.js",
            "title": "Updates the cropping instructions of the temporary avatar.",
            "description": "Updates the cropping instructions of the temporary avatar.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/post_api_2_avatar__type__temporaryCrop.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "approveUpgrade": {
            "main": "./lib/actions/approveUpgrade.js",
            "title": "approveUpgrade",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/approveUpgrade.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "cancelUpgrade": {
            "main": "./lib/actions/cancelUpgrade.js",
            "title": "cancelUpgrade",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/cancelUpgrade.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "acknowledgeErrors": {
            "main": "./lib/actions/acknowledgeErrors.js",
            "title": "acknowledgeErrors",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/acknowledgeErrors.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "setReadyToUpgrade": {
            "main": "./lib/actions/setReadyToUpgrade.js",
            "title": "setReadyToUpgrade",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/setReadyToUpgrade.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getState": {
            "main": "./lib/actions/getState.js",
            "title": "getState",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getState.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_comment__commentId__properties": {
            "main": "./lib/actions/get_api_2_comment__commentId__properties.js",
            "title": "Returns the keys of all properties for the comment identified by the key or by the id.",
            "description": "Returns the keys of all properties for the comment identified by the key or by the id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_comment__commentId__properties.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_api_2_comment__commentId__properties__propertyKey_": {
            "main": "./lib/actions/delete_api_2_comment__commentId__properties__propertyKey_.js",
            "title": "Removes the property from the comment identified by the key or by the id. Ths user removing the property is required\n to have permissions to administer the comment.",
            "description": "Removes the property from the comment identified by the key or by the id. Ths user removing the property is required\n to have permissions to administer the comment.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_api_2_comment__commentId__properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_comment__commentId__properties__propertyKey_": {
            "main": "./lib/actions/get_api_2_comment__commentId__properties__propertyKey_.js",
            "title": "Returns the value of the property with a given key from the comment identified by the key or by the id. The user who retrieves\n the property is required to have permissions to read the comment.",
            "description": "Returns the value of the property with a given key from the comment identified by the key or by the id. The user who retrieves\n the property is required to have permissions to read the comment.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_comment__commentId__properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "put_api_2_comment__commentId__properties__propertyKey_": {
            "main": "./lib/actions/put_api_2_comment__commentId__properties__propertyKey_.js",
            "title": "Sets the value of the specified comment's property.\n <p>\n You can use this resource to store a custom data against the comment identified by the key or by the id. The user\n who stores the data is required to have permissions to administer the comment.\n </p>",
            "description": "Sets the value of the specified comment's property.\n <p>\n You can use this resource to store a custom data against the comment identified by the key or by the id. The user\n who stores the data is required to have permissions to administer the comment.\n </p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/put_api_2_comment__commentId__properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createComponent": {
            "main": "./lib/actions/createComponent.js",
            "title": "Create a component via POST.",
            "description": "Create a component via POST.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createComponent.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_api_2_component__id_": {
            "main": "./lib/actions/delete_api_2_component__id_.js",
            "title": "Delete a project component.",
            "description": "Delete a project component.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_api_2_component__id_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getComponent": {
            "main": "./lib/actions/getComponent.js",
            "title": "Returns a project component.",
            "description": "Returns a project component.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getComponent.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updateComponent": {
            "main": "./lib/actions/updateComponent.js",
            "title": "Modify a component via PUT. Any fields present in the PUT will override existing values. As a convenience, if a field\n is not present, it is silently ignored.\n <p>\n If leadUserName is an empty string (\"\") the component lead will be removed.",
            "description": "Modify a component via PUT. Any fields present in the PUT will override existing values. As a convenience, if a field\n is not present, it is silently ignored.\n <p>\n If leadUserName is an empty string (\"\") the component lead will be removed.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updateComponent.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getComponentRelatedIssues": {
            "main": "./lib/actions/getComponentRelatedIssues.js",
            "title": "Returns counts of issues related to this component.",
            "description": "Returns counts of issues related to this component.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getComponentRelatedIssues.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getConfiguration": {
            "main": "./lib/actions/getConfiguration.js",
            "title": "Returns the information if the optional features in JIRA are enabled or disabled. If the time tracking is enabled,\n it also returns the detailed information about time tracking configuration.",
            "description": "Returns the information if the optional features in JIRA are enabled or disabled. If the time tracking is enabled,\n it also returns the detailed information about time tracking configuration.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getConfiguration.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getCustomFieldOption": {
            "main": "./lib/actions/getCustomFieldOption.js",
            "title": "Returns a full representation of the Custom Field Option that has the given id.",
            "description": "Returns a full representation of the Custom Field Option that has the given id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getCustomFieldOption.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "list": {
            "main": "./lib/actions/list.js",
            "title": "Returns a list of all dashboards, optionally filtering them.",
            "description": "Returns a list of all dashboards, optionally filtering them.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/list.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_dashboard__dashboardId__items__itemId__properties": {
            "main": "./lib/actions/get_api_2_dashboard__dashboardId__items__itemId__properties.js",
            "title": "Returns the keys of all properties for the dashboard item identified by the id.",
            "description": "Returns the keys of all properties for the dashboard item identified by the id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_dashboard__dashboardId__items__itemId__properties.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_api_2_dashboard__dashboardId__items__itemId__properties__propertyKey_": {
            "main": "./lib/actions/delete_api_2_dashboard__dashboardId__items__itemId__properties__propertyKey_.js",
            "title": "Removes the property from the dashboard item identified by the key or by the id. Ths user removing the property is required\n to have permissions to administer the dashboard item.",
            "description": "Removes the property from the dashboard item identified by the key or by the id. Ths user removing the property is required\n to have permissions to administer the dashboard item.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_api_2_dashboard__dashboardId__items__itemId__properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_dashboard__dashboardId__items__itemId__properties__propertyKey_": {
            "main": "./lib/actions/get_api_2_dashboard__dashboardId__items__itemId__properties__propertyKey_.js",
            "title": "Returns the value of the property with a given key from the dashboard item identified by the id.\n The user who retrieves the property is required to have permissions to read the dashboard item.",
            "description": "Returns the value of the property with a given key from the dashboard item identified by the id.\n The user who retrieves the property is required to have permissions to read the dashboard item.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_dashboard__dashboardId__items__itemId__properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "put_api_2_dashboard__dashboardId__items__itemId__properties__propertyKey_": {
            "main": "./lib/actions/put_api_2_dashboard__dashboardId__items__itemId__properties__propertyKey_.js",
            "title": "Sets the value of the specified dashboard item's property.\n <p>\n You can use this resource to store a custom data against the dashboard item identified by the id.\n The user who stores the data is required to have permissions to administer the dashboard item.\n </p>",
            "description": "Sets the value of the specified dashboard item's property.\n <p>\n You can use this resource to store a custom data against the dashboard item identified by the id.\n The user who stores the data is required to have permissions to administer the dashboard item.\n </p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/put_api_2_dashboard__dashboardId__items__itemId__properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getDashboard": {
            "main": "./lib/actions/getDashboard.js",
            "title": "Returns a single dashboard.",
            "description": "Returns a single dashboard.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getDashboard.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getFields": {
            "main": "./lib/actions/getFields.js",
            "title": "Returns a list of all fields, both System and Custom",
            "description": "Returns a list of all fields, both System and Custom",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getFields.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createCustomField": {
            "main": "./lib/actions/createCustomField.js",
            "title": "Creates a custom field using a definition (object encapsulating custom field data)",
            "description": "Creates a custom field using a definition (object encapsulating custom field data)",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createCustomField.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createFilter": {
            "main": "./lib/actions/createFilter.js",
            "title": "Creates a new filter, and returns newly created filter.\n Currently sets permissions just using the users default sharing permissions",
            "description": "Creates a new filter, and returns newly created filter.\n Currently sets permissions just using the users default sharing permissions",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createFilter.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getDefaultShareScope": {
            "main": "./lib/actions/getDefaultShareScope.js",
            "title": "Returns the default share scope of the logged-in user.",
            "description": "Returns the default share scope of the logged-in user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getDefaultShareScope.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "setDefaultShareScope": {
            "main": "./lib/actions/setDefaultShareScope.js",
            "title": "Sets the default share scope of the logged-in user. Available values are GLOBAL and PRIVATE.",
            "description": "Sets the default share scope of the logged-in user. Available values are GLOBAL and PRIVATE.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/setDefaultShareScope.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getFavouriteFilters": {
            "main": "./lib/actions/getFavouriteFilters.js",
            "title": "Returns the favourite filters of the logged-in user.",
            "description": "Returns the favourite filters of the logged-in user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getFavouriteFilters.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteFilter": {
            "main": "./lib/actions/deleteFilter.js",
            "title": "Delete a filter.",
            "description": "Delete a filter.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteFilter.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getFilter": {
            "main": "./lib/actions/getFilter.js",
            "title": "Returns a filter given an id",
            "description": "Returns a filter given an id",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getFilter.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "editFilter": {
            "main": "./lib/actions/editFilter.js",
            "title": "Updates an existing filter, and returns its new value.",
            "description": "Updates an existing filter, and returns its new value.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/editFilter.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_api_2_filter__id__columns": {
            "main": "./lib/actions/delete_api_2_filter__id__columns.js",
            "title": "Resets the columns for the given filter such that the filter no longer has its own column config.",
            "description": "Resets the columns for the given filter such that the filter no longer has its own column config.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_api_2_filter__id__columns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_filter__id__columns": {
            "main": "./lib/actions/get_api_2_filter__id__columns.js",
            "title": "Returns the default columns for the given filter. Currently logged in user will be used as\n the user making such request.",
            "description": "Returns the default columns for the given filter. Currently logged in user will be used as\n the user making such request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_filter__id__columns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "put_api_2_filter__id__columns": {
            "main": "./lib/actions/put_api_2_filter__id__columns.js",
            "title": "Sets the default columns for the given filter.",
            "description": "Sets the default columns for the given filter.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/put_api_2_filter__id__columns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getSharePermissions": {
            "main": "./lib/actions/getSharePermissions.js",
            "title": "Returns all share permissions of the given filter.",
            "description": "Returns all share permissions of the given filter.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getSharePermissions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "addSharePermission": {
            "main": "./lib/actions/addSharePermission.js",
            "title": "Adds a share permissions to the given filter. Adding a global permission removes all previous permissions from the filter.",
            "description": "Adds a share permissions to the given filter. Adding a global permission removes all previous permissions from the filter.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addSharePermission.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteSharePermission": {
            "main": "./lib/actions/deleteSharePermission.js",
            "title": "Removes a share permissions from the given filter.",
            "description": "Removes a share permissions from the given filter.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteSharePermission.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getSharePermission": {
            "main": "./lib/actions/getSharePermission.js",
            "title": "Returns a single share permission of the given filter.",
            "description": "Returns a single share permission of the given filter.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getSharePermission.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "removeGroup": {
            "main": "./lib/actions/removeGroup.js",
            "title": "Deletes a group by given group parameter.\n <p>\n Returns no content",
            "description": "Deletes a group by given group parameter.\n <p>\n Returns no content",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/removeGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getGroup": {
            "main": "./lib/actions/getGroup.js",
            "title": "Returns REST representation for the requested group. Allows to get list of active users belonging to the\n specified group and its subgroups if \"users\" expand option is provided. You can page through users list by using\n indexes in expand param. For example to get users from index 10 to index 15 use \"users[10:15]\" expand value. This\n will return 6 users (if there are at least 16 users in this group). Indexes are 0-based and inclusive.\n <p>\n This resource is deprecated, please use group/member API instead.",
            "description": "Returns REST representation for the requested group. Allows to get list of active users belonging to the\n specified group and its subgroups if \"users\" expand option is provided. You can page through users list by using\n indexes in expand param. For example to get users from index 10 to index 15 use \"users[10:15]\" expand value. This\n will return 6 users (if there are at least 16 users in this group). Indexes are 0-based and inclusive.\n <p>\n This resource is deprecated, please use group/member API instead.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createGroup": {
            "main": "./lib/actions/createGroup.js",
            "title": "Creates a group by given group parameter\n <p>\n Returns REST representation for the requested group.",
            "description": "Creates a group by given group parameter\n <p>\n Returns REST representation for the requested group.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getUsersFromGroup": {
            "main": "./lib/actions/getUsersFromGroup.js",
            "title": "This resource returns a <a href=\"#pagination\">paginated</a> list of users who are members of the specified group and its subgroups.\n Users in the page are ordered by user names. User of this resource is required to have sysadmin or admin permissions.",
            "description": "This resource returns a <a href=\"#pagination\">paginated</a> list of users who are members of the specified group and its subgroups.\n Users in the page are ordered by user names. User of this resource is required to have sysadmin or admin permissions.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getUsersFromGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "removeUserFromGroup": {
            "main": "./lib/actions/removeUserFromGroup.js",
            "title": "Removes given user from a group.\n <p>\n Returns no content",
            "description": "Removes given user from a group.\n <p>\n Returns no content",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/removeUserFromGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "addUserToGroup": {
            "main": "./lib/actions/addUserToGroup.js",
            "title": "Adds given user to a group.\n <p>\n Returns the current state of the group.",
            "description": "Adds given user to a group.\n <p>\n Returns the current state of the group.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addUserToGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "findGroups": {
            "main": "./lib/actions/findGroups.js",
            "title": "Returns groups with substrings matching a given query. This is mainly for use with\n the group picker, so the returned groups contain html to be used as picker suggestions.\n The groups are also wrapped in a single response object that also contains a header for\n use in the picker, specifically <i>Showing X of Y matching groups</i>.\n <p>\n The number of groups returned is limited by the system property \"jira.ajax.autocomplete.limit\"\n <p>\n The groups will be unique and sorted.",
            "description": "Returns groups with substrings matching a given query. This is mainly for use with\n the group picker, so the returned groups contain html to be used as picker suggestions.\n The groups are also wrapped in a single response object that also contains a header for\n use in the picker, specifically <i>Showing X of Y matching groups</i>.\n <p>\n The number of groups returned is limited by the system property \"jira.ajax.autocomplete.limit\"\n <p>\n The groups will be unique and sorted.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/findGroups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "findUsersAndGroups": {
            "main": "./lib/actions/findUsersAndGroups.js",
            "title": "Returns a list of users and groups matching query with highlighting. This resource cannot be accessed\n anonymously.",
            "description": "Returns a list of users and groups matching query with highlighting. This resource cannot be accessed\n anonymously.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/findUsersAndGroups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getIndexSummary": {
            "main": "./lib/actions/getIndexSummary.js",
            "title": "Summarizes index condition of current node.\n <p/>\n Returned data consists of:\n <ul>\n <li><code>nodeId</code> - Node identifier.</li>\n <li><code>reportTime</code> - Time of this report creation.</li>\n <li><code>issueIndex</code> - Summary of issue index status.</li>\n <li><code>replicationQueues</code> - Map of index replication queues, where\n keys represent nodes from which replication operations came from.</li>\n </ul>\n <p/>\n <code>issueIndex</code> can contain:\n <ul>\n <li><code>indexReadable</code> - If <code>false</code> the end point failed to read data from issue index\n (check JIRA logs for detailed stack trace), otherwise <code>true</code>.\n When <code>false</code> other fields of <code>issueIndex</code> can be not visible.</li>\n <li><code>countInDatabase</code> - Count of issues found in database.</li>\n <li><code>countInIndex</code> - Count of issues found while querying index.</li>\n <li><code>lastUpdatedInDatabase</code> - Time of last update of issue found in database.</li>\n <li><code>lastUpdatedInIndex</code> - Time of last update of issue found while querying index.</li>\n </ul>\n <p/>\n <code>replicationQueues</code>'s map values can contain:\n <ul>\n <li><code>lastConsumedOperation</code> - Last executed index replication operation by current node from sending node's queue.</li>\n <li><code>lastConsumedOperation.id</code> - Identifier of the operation.</li>\n <li><code>lastConsumedOperation.replicationTime</code> - Time when the operation was sent to other nodes.</li>\n <li><code>lastOperationInQueue</code> - Last index replication operation in sending node's queue.</li>\n <li><code>lastOperationInQueue.id</code> - Identifier of the operation.</li>\n <li><code>lastOperationInQueue.replicationTime</code> - Time when the operation was sent to other nodes.</li>\n <li><code>queueSize</code> - Number of operations in queue from sending node to current node.</li>\n </ul>",
            "description": "Summarizes index condition of current node.\n <p/>\n Returned data consists of:\n <ul>\n <li><code>nodeId</code> - Node identifier.</li>\n <li><code>reportTime</code> - Time of this report creation.</li>\n <li><code>issueIndex</code> - Summary of issue index status.</li>\n <li><code>replicationQueues</code> - Map of index replication queues, where\n keys represent nodes from which replication operations came from.</li>\n </ul>\n <p/>\n <code>issueIndex</code> can contain:\n <ul>\n <li><code>indexReadable</code> - If <code>false</code> the end point failed to read data from issue index\n (check JIRA logs for detailed stack trace), otherwise <code>true</code>.\n When <code>false</code> other fields of <code>issueIndex</code> can be not visible.</li>\n <li><code>countInDatabase</code> - Count of issues found in database.</li>\n <li><code>countInIndex</code> - Count of issues found while querying index.</li>\n <li><code>lastUpdatedInDatabase</code> - Time of last update of issue found in database.</li>\n <li><code>lastUpdatedInIndex</code> - Time of last update of issue found while querying index.</li>\n </ul>\n <p/>\n <code>replicationQueues</code>'s map values can contain:\n <ul>\n <li><code>lastConsumedOperation</code> - Last executed index replication operation by current node from sending node's queue.</li>\n <li><code>lastConsumedOperation.id</code> - Identifier of the operation.</li>\n <li><code>lastConsumedOperation.replicationTime</code> - Time when the operation was sent to other nodes.</li>\n <li><code>lastOperationInQueue</code> - Last index replication operation in sending node's queue.</li>\n <li><code>lastOperationInQueue.id</code> - Identifier of the operation.</li>\n <li><code>lastOperationInQueue.replicationTime</code> - Time when the operation was sent to other nodes.</li>\n <li><code>queueSize</code> - Number of operations in queue from sending node to current node.</li>\n </ul>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getIndexSummary.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createIssue": {
            "main": "./lib/actions/createIssue.js",
            "title": "Creates an issue or a sub-task from a JSON representation.\n <p/>\n The fields that can be set on create, in either the fields parameter or the update parameter can be determined\n using the <b>/rest/api/2/issue/createmeta</b> resource.\n If a field is not configured to appear on the create screen, then it will not be in the createmeta, and a field\n validation error will occur if it is submitted.\n <p/>\n Creating a sub-task is similar to creating a regular issue, with two important differences:\n <ul>\n <li>the <code>issueType</code> field must correspond to a sub-task issue type (you can use\n <code>/issue/createmeta</code> to discover sub-task issue types), and</li>\n <li>you must provide a <code>parent</code> field in the issue create request containing the id or key of the\n parent issue.</li>\n </ul>",
            "description": "Creates an issue or a sub-task from a JSON representation.\n <p/>\n The fields that can be set on create, in either the fields parameter or the update parameter can be determined\n using the <b>/rest/api/2/issue/createmeta</b> resource.\n If a field is not configured to appear on the create screen, then it will not be in the createmeta, and a field\n validation error will occur if it is submitted.\n <p/>\n Creating a sub-task is similar to creating a regular issue, with two important differences:\n <ul>\n <li>the <code>issueType</code> field must correspond to a sub-task issue type (you can use\n <code>/issue/createmeta</code> to discover sub-task issue types), and</li>\n <li>you must provide a <code>parent</code> field in the issue create request containing the id or key of the\n parent issue.</li>\n </ul>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createIssue.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createIssues": {
            "main": "./lib/actions/createIssues.js",
            "title": "Creates issues or sub-tasks from a JSON representation.\n <p/>\n Creates many issues in one bulk operation.\n <p/>\n Creating a sub-task is similar to creating a regular issue. More details can be found in createIssue section:\n {@link IssueResource#createIssue(IssueUpdateBean)}}",
            "description": "Creates issues or sub-tasks from a JSON representation.\n <p/>\n Creates many issues in one bulk operation.\n <p/>\n Creating a sub-task is similar to creating a regular issue. More details can be found in createIssue section:\n {@link IssueResource#createIssue(IssueUpdateBean)}}",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createIssues.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getCreateIssueMeta": {
            "main": "./lib/actions/getCreateIssueMeta.js",
            "title": "Returns the meta data for creating issues. This includes the available projects, issue types and fields,\n including field types and whether or not those fields are required.\n Projects will not be returned if the user does not have permission to create issues in that project.\n <p/>\n The fields in the createmeta correspond to the fields in the create screen for the project/issuetype.\n Fields not in the screen will not be in the createmeta.\n <p/>\n Fields will only be returned if <code>expand=projects.issuetypes.fields</code>.\n <p/>\n The results can be filtered by project and/or issue type, given by the query params.",
            "description": "Returns the meta data for creating issues. This includes the available projects, issue types and fields,\n including field types and whether or not those fields are required.\n Projects will not be returned if the user does not have permission to create issues in that project.\n <p/>\n The fields in the createmeta correspond to the fields in the create screen for the project/issuetype.\n Fields not in the screen will not be in the createmeta.\n <p/>\n Fields will only be returned if <code>expand=projects.issuetypes.fields</code>.\n <p/>\n The results can be filtered by project and/or issue type, given by the query params.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getCreateIssueMeta.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getIssuePickerResource": {
            "main": "./lib/actions/getIssuePickerResource.js",
            "title": "Returns suggested issues which match the auto-completion query for the user which executes this request. This REST\n method will check the user's history and the user's browsing context and select this issues, which match the query.",
            "description": "Returns suggested issues which match the auto-completion query for the user which executes this request. This REST\n method will check the user's history and the user's browsing context and select this issues, which match the query.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getIssuePickerResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteIssue": {
            "main": "./lib/actions/deleteIssue.js",
            "title": "Delete an issue.\n <p/>\n If the issue has subtasks you must set the parameter deleteSubtasks=true to delete the issue.\n You cannot delete an issue without its subtasks also being deleted.",
            "description": "Delete an issue.\n <p/>\n If the issue has subtasks you must set the parameter deleteSubtasks=true to delete the issue.\n You cannot delete an issue without its subtasks also being deleted.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteIssue.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getIssue": {
            "main": "./lib/actions/getIssue.js",
            "title": "Returns a full representation of the issue for the given issue key.\n <p>\n An issue JSON consists of the issue key, a collection of fields,\n a link to the workflow transition sub-resource, and (optionally) the HTML rendered values of any fields that support it\n (e.g. if wiki syntax is enabled for the description or comments).\n <p>\n The <code>fields</code> param (which can be specified multiple times) gives a comma-separated list of fields\n to include in the response. This can be used to retrieve a subset of fields.\n A particular field can be excluded by prefixing it with a minus.\n <p>\n By default, all (<code>*all</code>) fields are returned in this get-issue resource. Note: the default is different\n when doing a jql search -- the default there is just navigable fields (<code>*navigable</code>).\n <ul>\n <li><code>*all</code> - include all fields</li>\n <li><code>*navigable</code> - include just navigable fields</li>\n <li><code>summary,comment</code> - include just the summary and comments</li>\n <li><code>-comment</code> - include everything except comments (the default is <code>*all</code> for get-issue)</li>\n <li><code>*all,-comment</code> - include everything except comments</li>\n </ul>\n <p>\n The {@code properties} param is similar to {@code fields} and specifies a comma-separated list of issue\n properties to include. Unlike {@code fields}, properties are not included by default. To include them all\n send {@code ?properties=*all}. You can also include only specified properties or exclude some properties\n with a minus (-) sign.\n <p>\n <ul>\n <li>{@code *all} - include all properties</li>\n <li>{@code *all, -prop1} - include all properties except {@code prop1} </li>\n <li>{@code prop1, prop1} - include {@code prop1} and {@code prop2} properties </li>\n </ul>\n </p>\n <p/>\n JIRA will attempt to identify the issue by the <code>issueIdOrKey</code> path parameter. This can be an issue id,\n or an issue key. If the issue cannot be found via an exact match, JIRA will also look for the issue in a case-insensitive way, or\n by looking to see if the issue was moved. In either of these cases, the request will proceed as normal (a 302 or other redirect\n will <b>not</b> be returned). The issue key contained in the response will indicate the current value of issue's key.\n <p/>\n The <code>expand</code> param is used to include, hidden by default, parts of response. This can be used to include:\n <ul>\n <li><code>renderedFields</code> - field values in HTML format</li>\n <li><code>names</code> - display name of each field</li>\n <li><code>schema</code> - schema for each field which describes a type of the field</li>\n <li><code>transitions</code> - all possible transitions for the given issue</li>\n <li><code>operations</code> - all possibles operations which may be applied on issue</li>\n <li><code>editmeta</code> - information about how each field may be edited. It contains field's schema as well.</li>\n <li><code>changelog</code> - history of all changes of the given issue</li>\n <li><code>versionedRepresentations</code> -\n REST representations of all fields. Some field may contain more recent versions. RESET representations are numbered.\n The greatest number always represents the most recent version. It is recommended that the most recent version is used.\n version for these fields which provide a more recent REST representation.\n After including <code>versionedRepresentations</code> \"fields\" field become hidden.</li>\n </ul>",
            "description": "Returns a full representation of the issue for the given issue key.\n <p>\n An issue JSON consists of the issue key, a collection of fields,\n a link to the workflow transition sub-resource, and (optionally) the HTML rendered values of any fields that support it\n (e.g. if wiki syntax is enabled for the description or comments).\n <p>\n The <code>fields</code> param (which can be specified multiple times) gives a comma-separated list of fields\n to include in the response. This can be used to retrieve a subset of fields.\n A particular field can be excluded by prefixing it with a minus.\n <p>\n By default, all (<code>*all</code>) fields are returned in this get-issue resource. Note: the default is different\n when doing a jql search -- the default there is just navigable fields (<code>*navigable</code>).\n <ul>\n <li><code>*all</code> - include all fields</li>\n <li><code>*navigable</code> - include just navigable fields</li>\n <li><code>summary,comment</code> - include just the summary and comments</li>\n <li><code>-comment</code> - include everything except comments (the default is <code>*all</code> for get-issue)</li>\n <li><code>*all,-comment</code> - include everything except comments</li>\n </ul>\n <p>\n The {@code properties} param is similar to {@code fields} and specifies a comma-separated list of issue\n properties to include. Unlike {@code fields}, properties are not included by default. To include them all\n send {@code ?properties=*all}. You can also include only specified properties or exclude some properties\n with a minus (-) sign.\n <p>\n <ul>\n <li>{@code *all} - include all properties</li>\n <li>{@code *all, -prop1} - include all properties except {@code prop1} </li>\n <li>{@code prop1, prop1} - include {@code prop1} and {@code prop2} properties </li>\n </ul>\n </p>\n <p/>\n JIRA will attempt to identify the issue by the <code>issueIdOrKey</code> path parameter. This can be an issue id,\n or an issue key. If the issue cannot be found via an exact match, JIRA will also look for the issue in a case-insensitive way, or\n by looking to see if the issue was moved. In either of these cases, the request will proceed as normal (a 302 or other redirect\n will <b>not</b> be returned). The issue key contained in the response will indicate the current value of issue's key.\n <p/>\n The <code>expand</code> param is used to include, hidden by default, parts of response. This can be used to include:\n <ul>\n <li><code>renderedFields</code> - field values in HTML format</li>\n <li><code>names</code> - display name of each field</li>\n <li><code>schema</code> - schema for each field which describes a type of the field</li>\n <li><code>transitions</code> - all possible transitions for the given issue</li>\n <li><code>operations</code> - all possibles operations which may be applied on issue</li>\n <li><code>editmeta</code> - information about how each field may be edited. It contains field's schema as well.</li>\n <li><code>changelog</code> - history of all changes of the given issue</li>\n <li><code>versionedRepresentations</code> -\n REST representations of all fields. Some field may contain more recent versions. RESET representations are numbered.\n The greatest number always represents the most recent version. It is recommended that the most recent version is used.\n version for these fields which provide a more recent REST representation.\n After including <code>versionedRepresentations</code> \"fields\" field become hidden.</li>\n </ul>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getIssue.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "editIssue": {
            "main": "./lib/actions/editIssue.js",
            "title": "Edits an issue from a JSON representation.\n <p/>\n The issue can either be updated by setting explicit the field value(s)\n or by using an operation to change the field value.\n <p/>\n The fields that can be updated, in either the fields parameter or the update parameter, can be determined\n using the <b>/rest/api/2/issue/{issueIdOrKey}/editmeta</b> resource.<br>\n If a field is not configured to appear on the edit screen, then it will not be in the editmeta, and a field\n validation error will occur if it is submitted.\n <p/>\n Specifying a \"field_id\": field_value in the \"fields\" is a shorthand for a \"set\" operation in the \"update\" section.<br>\n Field should appear either in \"fields\" or \"update\", not in both.",
            "description": "Edits an issue from a JSON representation.\n <p/>\n The issue can either be updated by setting explicit the field value(s)\n or by using an operation to change the field value.\n <p/>\n The fields that can be updated, in either the fields parameter or the update parameter, can be determined\n using the <b>/rest/api/2/issue/{issueIdOrKey}/editmeta</b> resource.<br>\n If a field is not configured to appear on the edit screen, then it will not be in the editmeta, and a field\n validation error will occur if it is submitted.\n <p/>\n Specifying a \"field_id\": field_value in the \"fields\" is a shorthand for a \"set\" operation in the \"update\" section.<br>\n Field should appear either in \"fields\" or \"update\", not in both.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/editIssue.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "assign": {
            "main": "./lib/actions/assign.js",
            "title": "Assigns an issue to a user.\n You can use this resource to assign issues when the user submitting the request has the assign permission but not the\n edit issue permission.\n If the name is \"-1\" automatic assignee is used.  A null name will remove the assignee.",
            "description": "Assigns an issue to a user.\n You can use this resource to assign issues when the user submitting the request has the assign permission but not the\n edit issue permission.\n If the name is \"-1\" automatic assignee is used.  A null name will remove the assignee.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/assign.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "addAttachment": {
            "main": "./lib/actions/addAttachment.js",
            "title": "Add one or more attachments to an issue.\n <p>\n This resource expects a multipart post. The media-type multipart/form-data is defined in RFC 1867. Most client\n libraries have classes that make dealing with multipart posts simple. For instance, in Java the Apache HTTP Components\n library provides a\n <a href=\"http://hc.apache.org/httpcomponents-client-ga/httpmime/apidocs/org/apache/http/entity/mime/MultipartEntity.html\">MultiPartEntity</a>\n that makes it simple to submit a multipart POST.\n <p>\n In order to protect against XSRF attacks, because this method accepts multipart/form-data, it has XSRF protection\n on it.  This means you must submit a header of X-Atlassian-Token: no-check with the request, otherwise it will be\n blocked.\n <p>\n The name of the multipart/form-data parameter that contains attachments must be \"file\"\n <p>\n A simple example to upload a file called \"myfile.txt\" to issue REST-123:\n <pre>curl -D- -u admin:admin -X POST -H \"X-Atlassian-Token: no-check\" -F \"file=@myfile.txt\" http://myhost/rest/api/2/issue/TEST-123/attachments</pre>",
            "description": "Add one or more attachments to an issue.\n <p>\n This resource expects a multipart post. The media-type multipart/form-data is defined in RFC 1867. Most client\n libraries have classes that make dealing with multipart posts simple. For instance, in Java the Apache HTTP Components\n library provides a\n <a href=\"http://hc.apache.org/httpcomponents-client-ga/httpmime/apidocs/org/apache/http/entity/mime/MultipartEntity.html\">MultiPartEntity</a>\n that makes it simple to submit a multipart POST.\n <p>\n In order to protect against XSRF attacks, because this method accepts multipart/form-data, it has XSRF protection\n on it.  This means you must submit a header of X-Atlassian-Token: no-check with the request, otherwise it will be\n blocked.\n <p>\n The name of the multipart/form-data parameter that contains attachments must be \"file\"\n <p>\n A simple example to upload a file called \"myfile.txt\" to issue REST-123:\n <pre>curl -D- -u admin:admin -X POST -H \"X-Atlassian-Token: no-check\" -F \"file=@myfile.txt\" http://myhost/rest/api/2/issue/TEST-123/attachments</pre>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addAttachment.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getComments": {
            "main": "./lib/actions/getComments.js",
            "title": "Returns all comments for an issue.\n <p>\n Results can be ordered by the \"created\" field which means the date a comment was added.\n </p>",
            "description": "Returns all comments for an issue.\n <p>\n Results can be ordered by the \"created\" field which means the date a comment was added.\n </p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getComments.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "addComment": {
            "main": "./lib/actions/addComment.js",
            "title": "Adds a new comment to an issue.",
            "description": "Adds a new comment to an issue.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addComment.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteComment": {
            "main": "./lib/actions/deleteComment.js",
            "title": "Deletes an existing comment .",
            "description": "Deletes an existing comment .",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteComment.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getComment": {
            "main": "./lib/actions/getComment.js",
            "title": "Returns a single comment.",
            "description": "Returns a single comment.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getComment.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updateComment": {
            "main": "./lib/actions/updateComment.js",
            "title": "Updates an existing comment using its JSON representation.",
            "description": "Updates an existing comment using its JSON representation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updateComment.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getEditIssueMeta": {
            "main": "./lib/actions/getEditIssueMeta.js",
            "title": "Returns the meta data for editing an issue.\n <p/>\n The fields in the editmeta correspond to the fields in the edit screen for the issue.\n Fields not in the screen will not be in the editmeta.",
            "description": "Returns the meta data for editing an issue.\n <p/>\n The fields in the editmeta correspond to the fields in the edit screen for the issue.\n Fields not in the screen will not be in the editmeta.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getEditIssueMeta.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "notify": {
            "main": "./lib/actions/notify.js",
            "title": "Sends a notification (email) to the list or recipients defined in the request.",
            "description": "Sends a notification (email) to the list or recipients defined in the request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/notify.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_issue__issueIdOrKey__properties": {
            "main": "./lib/actions/get_api_2_issue__issueIdOrKey__properties.js",
            "title": "Returns the keys of all properties for the issue identified by the key or by the id.",
            "description": "Returns the keys of all properties for the issue identified by the key or by the id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_issue__issueIdOrKey__properties.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_api_2_issue__issueIdOrKey__properties__propertyKey_": {
            "main": "./lib/actions/delete_api_2_issue__issueIdOrKey__properties__propertyKey_.js",
            "title": "Removes the property from the issue identified by the key or by the id. Ths user removing the property is required\n to have permissions to edit the issue.",
            "description": "Removes the property from the issue identified by the key or by the id. Ths user removing the property is required\n to have permissions to edit the issue.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_api_2_issue__issueIdOrKey__properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_issue__issueIdOrKey__properties__propertyKey_": {
            "main": "./lib/actions/get_api_2_issue__issueIdOrKey__properties__propertyKey_.js",
            "title": "Returns the value of the property with a given key from the issue identified by the key or by the id. The user who retrieves\n the property is required to have permissions to read the issue.",
            "description": "Returns the value of the property with a given key from the issue identified by the key or by the id. The user who retrieves\n the property is required to have permissions to read the issue.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_issue__issueIdOrKey__properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "put_api_2_issue__issueIdOrKey__properties__propertyKey_": {
            "main": "./lib/actions/put_api_2_issue__issueIdOrKey__properties__propertyKey_.js",
            "title": "Sets the value of the specified issue's property.\n <p>\n You can use this resource to store a custom data against the issue identified by the key or by the id. The user\n who stores the data is required to have permissions to edit the issue.\n </p>",
            "description": "Sets the value of the specified issue's property.\n <p>\n You can use this resource to store a custom data against the issue identified by the key or by the id. The user\n who stores the data is required to have permissions to edit the issue.\n </p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/put_api_2_issue__issueIdOrKey__properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteRemoteIssueLinkByGlobalId": {
            "main": "./lib/actions/deleteRemoteIssueLinkByGlobalId.js",
            "title": "Delete the remote issue link with the given global id on the issue.",
            "description": "Delete the remote issue link with the given global id on the issue.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteRemoteIssueLinkByGlobalId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getRemoteIssueLinks": {
            "main": "./lib/actions/getRemoteIssueLinks.js",
            "title": "A REST sub-resource representing the remote issue links on the issue.",
            "description": "A REST sub-resource representing the remote issue links on the issue.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getRemoteIssueLinks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createOrUpdateRemoteIssueLink": {
            "main": "./lib/actions/createOrUpdateRemoteIssueLink.js",
            "title": "Creates or updates a remote issue link from a JSON representation. If a globalId is provided and a remote issue link\n exists with that globalId, the remote issue link is updated. Otherwise, the remote issue link is created.",
            "description": "Creates or updates a remote issue link from a JSON representation. If a globalId is provided and a remote issue link\n exists with that globalId, the remote issue link is updated. Otherwise, the remote issue link is created.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createOrUpdateRemoteIssueLink.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteRemoteIssueLinkById": {
            "main": "./lib/actions/deleteRemoteIssueLinkById.js",
            "title": "Delete the remote issue link with the given id on the issue.",
            "description": "Delete the remote issue link with the given id on the issue.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteRemoteIssueLinkById.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getRemoteIssueLinkById": {
            "main": "./lib/actions/getRemoteIssueLinkById.js",
            "title": "Get the remote issue link with the given id on the issue.",
            "description": "Get the remote issue link with the given id on the issue.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getRemoteIssueLinkById.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updateRemoteIssueLink": {
            "main": "./lib/actions/updateRemoteIssueLink.js",
            "title": "Updates a remote issue link from a JSON representation. Any fields not provided are set to null.",
            "description": "Updates a remote issue link from a JSON representation. Any fields not provided are set to null.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updateRemoteIssueLink.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getSubTasks": {
            "main": "./lib/actions/getSubTasks.js",
            "title": "Returns an issue's subtask list",
            "description": "Returns an issue's subtask list",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getSubTasks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "canMoveSubTask": {
            "main": "./lib/actions/canMoveSubTask.js",
            "title": "canMoveSubTask",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/canMoveSubTask.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "moveSubTasks": {
            "main": "./lib/actions/moveSubTasks.js",
            "title": "Reorders an issue's subtasks by moving the subtask at index \"from\"\n to index \"to\".",
            "description": "Reorders an issue's subtasks by moving the subtask at index \"from\"\n to index \"to\".",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/moveSubTasks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getTransitions": {
            "main": "./lib/actions/getTransitions.js",
            "title": "Get a list of the transitions possible for this issue by the current user, along with fields that are required and their types.\n <p/>\n Fields will only be returned if <code>expand=transitions.fields</code>.\n <p/>\n The fields in the metadata correspond to the fields in the transition screen for that transition.\n Fields not in the screen will not be in the metadata.",
            "description": "Get a list of the transitions possible for this issue by the current user, along with fields that are required and their types.\n <p/>\n Fields will only be returned if <code>expand=transitions.fields</code>.\n <p/>\n The fields in the metadata correspond to the fields in the transition screen for that transition.\n Fields not in the screen will not be in the metadata.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getTransitions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "doTransition": {
            "main": "./lib/actions/doTransition.js",
            "title": "Perform a transition on an issue.\n When performing the transition you can update or set other issue fields.\n <p/>\n The fields that can be set on transtion, in either the fields parameter or the update parameter can be determined\n using the <b>/rest/api/2/issue/{issueIdOrKey}/transitions?expand=transitions.fields</b> resource.\n If a field is not configured to appear on the transition screen, then it will not be in the transition metadata, and a field\n validation error will occur if it is submitted.",
            "description": "Perform a transition on an issue.\n When performing the transition you can update or set other issue fields.\n <p/>\n The fields that can be set on transtion, in either the fields parameter or the update parameter can be determined\n using the <b>/rest/api/2/issue/{issueIdOrKey}/transitions?expand=transitions.fields</b> resource.\n If a field is not configured to appear on the transition screen, then it will not be in the transition metadata, and a field\n validation error will occur if it is submitted.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/doTransition.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "removeVote": {
            "main": "./lib/actions/removeVote.js",
            "title": "Remove your vote from an issue. (i.e. \"unvote\")",
            "description": "Remove your vote from an issue. (i.e. \"unvote\")",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/removeVote.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getVotes": {
            "main": "./lib/actions/getVotes.js",
            "title": "A REST sub-resource representing the voters on the issue.",
            "description": "A REST sub-resource representing the voters on the issue.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getVotes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "addVote": {
            "main": "./lib/actions/addVote.js",
            "title": "Cast your vote in favour of an issue.",
            "description": "Cast your vote in favour of an issue.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addVote.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "removeWatcher": {
            "main": "./lib/actions/removeWatcher.js",
            "title": "Removes a user from an issue's watcher list.",
            "description": "Removes a user from an issue's watcher list.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/removeWatcher.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getIssueWatchers": {
            "main": "./lib/actions/getIssueWatchers.js",
            "title": "Returns the list of watchers for the issue with the given key.",
            "description": "Returns the list of watchers for the issue with the given key.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getIssueWatchers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "addWatcher": {
            "main": "./lib/actions/addWatcher.js",
            "title": "Adds a user to an issue's watcher list.",
            "description": "Adds a user to an issue's watcher list.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addWatcher.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getIssueWorklog": {
            "main": "./lib/actions/getIssueWorklog.js",
            "title": "Returns all work logs for an issue. <br/>\n <strong>Note:</strong> Work logs won't be returned if the Log work field is hidden for the project.",
            "description": "Returns all work logs for an issue. <br/>\n <strong>Note:</strong> Work logs won't be returned if the Log work field is hidden for the project.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getIssueWorklog.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "addWorklog": {
            "main": "./lib/actions/addWorklog.js",
            "title": "Adds a new worklog entry to an issue.",
            "description": "Adds a new worklog entry to an issue.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addWorklog.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteWorklog": {
            "main": "./lib/actions/deleteWorklog.js",
            "title": "Deletes an existing worklog entry.",
            "description": "Deletes an existing worklog entry.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteWorklog.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getWorklog": {
            "main": "./lib/actions/getWorklog.js",
            "title": "Returns a specific worklog. <br/>\n <strong>Note:</strong> The work log won't be returned if the Log work field is hidden for the project.",
            "description": "Returns a specific worklog. <br/>\n <strong>Note:</strong> The work log won't be returned if the Log work field is hidden for the project.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getWorklog.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updateWorklog": {
            "main": "./lib/actions/updateWorklog.js",
            "title": "Updates an existing worklog entry.\n <p>Note that:</p>\n  <ul>\n      <li>Fields possible for editing are: comment, visibility, started, timeSpent and timeSpentSeconds.</li>\n      <li>Either timeSpent or timeSpentSeconds can be set.</li>\n      <li>Fields which are not set will not be updated.</li>\n      <li>For a request to be valid, it has to have at least one field change.</li>\n  </ul>",
            "description": "Updates an existing worklog entry.\n <p>Note that:</p>\n  <ul>\n      <li>Fields possible for editing are: comment, visibility, started, timeSpent and timeSpentSeconds.</li>\n      <li>Either timeSpent or timeSpentSeconds can be set.</li>\n      <li>Fields which are not set will not be updated.</li>\n      <li>For a request to be valid, it has to have at least one field change.</li>\n  </ul>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updateWorklog.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "linkIssues": {
            "main": "./lib/actions/linkIssues.js",
            "title": "Creates an issue link between two issues.\n The user requires the link issue permission for the issue which will be linked to another issue.\n The specified link type in the request is used to create the link and will create a link from the first issue\n to the second issue using the outward description. It also create a link from the second issue to the first issue using the\n inward description of the issue link type.\n It will add the supplied comment to the first issue. The comment can have a restriction who can view it.\n If group is specified, only users of this group can view this comment, if roleLevel is specified only users who have the specified role can view this comment.\n The user who creates the issue link needs to belong to the specified group or have the specified role.",
            "description": "Creates an issue link between two issues.\n The user requires the link issue permission for the issue which will be linked to another issue.\n The specified link type in the request is used to create the link and will create a link from the first issue\n to the second issue using the outward description. It also create a link from the second issue to the first issue using the\n inward description of the issue link type.\n It will add the supplied comment to the first issue. The comment can have a restriction who can view it.\n If group is specified, only users of this group can view this comment, if roleLevel is specified only users who have the specified role can view this comment.\n The user who creates the issue link needs to belong to the specified group or have the specified role.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/linkIssues.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteIssueLink": {
            "main": "./lib/actions/deleteIssueLink.js",
            "title": "Deletes an issue link with the specified id.\n To be able to delete an issue link you must be able to view both issues and must have the link issue permission\n for at least one of the issues.",
            "description": "Deletes an issue link with the specified id.\n To be able to delete an issue link you must be able to view both issues and must have the link issue permission\n for at least one of the issues.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteIssueLink.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getIssueLink": {
            "main": "./lib/actions/getIssueLink.js",
            "title": "Returns an issue link with the specified id.",
            "description": "Returns an issue link with the specified id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getIssueLink.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getIssueLinkTypes": {
            "main": "./lib/actions/getIssueLinkTypes.js",
            "title": "Returns a list of available issue link types, if issue linking is enabled.\n Each issue link type has an id, a name and a label for the outward and inward link relationship.",
            "description": "Returns a list of available issue link types, if issue linking is enabled.\n Each issue link type has an id, a name and a label for the outward and inward link relationship.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getIssueLinkTypes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createIssueLinkType": {
            "main": "./lib/actions/createIssueLinkType.js",
            "title": "Create a new issue link type.",
            "description": "Create a new issue link type.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createIssueLinkType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteIssueLinkType": {
            "main": "./lib/actions/deleteIssueLinkType.js",
            "title": "Delete the specified issue link type.",
            "description": "Delete the specified issue link type.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteIssueLinkType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getIssueLinkType": {
            "main": "./lib/actions/getIssueLinkType.js",
            "title": "Returns for a given issue link type id all information about this issue link type.",
            "description": "Returns for a given issue link type id all information about this issue link type.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getIssueLinkType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updateIssueLinkType": {
            "main": "./lib/actions/updateIssueLinkType.js",
            "title": "Update the specified issue link type.",
            "description": "Update the specified issue link type.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updateIssueLinkType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getIssueSecuritySchemes": {
            "main": "./lib/actions/getIssueSecuritySchemes.js",
            "title": "Returns all issue security schemes that are defined.",
            "description": "Returns all issue security schemes that are defined.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getIssueSecuritySchemes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_issuesecurityschemes__id_": {
            "main": "./lib/actions/get_api_2_issuesecurityschemes__id_.js",
            "title": "Returns the issue security scheme along with that are defined.",
            "description": "Returns the issue security scheme along with that are defined.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_issuesecurityschemes__id_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getIssueAllTypes": {
            "main": "./lib/actions/getIssueAllTypes.js",
            "title": "Returns a list of all issue types visible to the user",
            "description": "Returns a list of all issue types visible to the user",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getIssueAllTypes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createIssueType": {
            "main": "./lib/actions/createIssueType.js",
            "title": "Creates an issue type from a JSON representation and adds the issue newly created issue type to the default issue\n type scheme.",
            "description": "Creates an issue type from a JSON representation and adds the issue newly created issue type to the default issue\n type scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createIssueType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_api_2_issuetype__id_": {
            "main": "./lib/actions/delete_api_2_issuetype__id_.js",
            "title": "Deletes the specified issue type. If the issue type has any associated issues, these issues will be migrated to\n the alternative issue type specified in the parameter. You can determine the alternative issue types by calling\n the <b>/rest/api/2/issuetype/{id}/alternatives</b> resource.",
            "description": "Deletes the specified issue type. If the issue type has any associated issues, these issues will be migrated to\n the alternative issue type specified in the parameter. You can determine the alternative issue types by calling\n the <b>/rest/api/2/issuetype/{id}/alternatives</b> resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_api_2_issuetype__id_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_issuetype__id_": {
            "main": "./lib/actions/get_api_2_issuetype__id_.js",
            "title": "Returns a full representation of the issue type that has the given id.",
            "description": "Returns a full representation of the issue type that has the given id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_issuetype__id_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updateIssueType": {
            "main": "./lib/actions/updateIssueType.js",
            "title": "Updates the specified issue type from a JSON representation.",
            "description": "Updates the specified issue type from a JSON representation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updateIssueType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAlternativeIssueTypes": {
            "main": "./lib/actions/getAlternativeIssueTypes.js",
            "title": "Returns a list of all alternative issue types for the given issue type id. The list will contain these issues types, to which\n issues assigned to the given issue type can be migrated. The suitable alternatives are issue types which are assigned\n to the same workflow, the same field configuration and the same screen scheme.",
            "description": "Returns a list of all alternative issue types for the given issue type id. The list will contain these issues types, to which\n issues assigned to the given issue type can be migrated. The suitable alternatives are issue types which are assigned\n to the same workflow, the same field configuration and the same screen scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAlternativeIssueTypes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "post_api_2_issuetype__id__avatar": {
            "main": "./lib/actions/post_api_2_issuetype__id__avatar.js",
            "title": "Converts temporary avatar into a real avatar",
            "description": "Converts temporary avatar into a real avatar",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/post_api_2_issuetype__id__avatar.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "post_api_2_issuetype__id__avatar_temporary": {
            "main": "./lib/actions/post_api_2_issuetype__id__avatar_temporary.js",
            "title": "Creates temporary avatar using multipart. The response is sent back as JSON stored in a textarea. This is because\n the client uses remote iframing to submit avatars using multipart. So we must send them a valid HTML page back from\n which the client parses the JSON from.\n <p>\n Creating a temporary avatar is part of a 3-step process in uploading a new\n avatar for an issue type: upload, crop, confirm. This endpoint allows you to use a multipart upload\n instead of sending the image directly as the request body.\n </p>\n <p>\n You *must* use \"avatar\" as the name of the upload parameter:</p>\n <p>\n <pre>\n curl -c cookiejar.txt -X POST -u admin:admin -H \"X-Atlassian-Token: no-check\" \\\n   -F \"avatar=@mynewavatar.png;type=image/png\" \\\n   'http://localhost:8090/jira/rest/api/2/issuetype/1/avatar/temporary'\n </pre>",
            "description": "Creates temporary avatar using multipart. The response is sent back as JSON stored in a textarea. This is because\n the client uses remote iframing to submit avatars using multipart. So we must send them a valid HTML page back from\n which the client parses the JSON from.\n <p>\n Creating a temporary avatar is part of a 3-step process in uploading a new\n avatar for an issue type: upload, crop, confirm. This endpoint allows you to use a multipart upload\n instead of sending the image directly as the request body.\n </p>\n <p>\n You *must* use \"avatar\" as the name of the upload parameter:</p>\n <p>\n <pre>\n curl -c cookiejar.txt -X POST -u admin:admin -H \"X-Atlassian-Token: no-check\" \\\n   -F \"avatar=@mynewavatar.png;type=image/png\" \\\n   'http://localhost:8090/jira/rest/api/2/issuetype/1/avatar/temporary'\n </pre>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/post_api_2_issuetype__id__avatar_temporary.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getPropertyKeys": {
            "main": "./lib/actions/getPropertyKeys.js",
            "title": "Returns the keys of all properties for the issue type identified by the id.",
            "description": "Returns the keys of all properties for the issue type identified by the id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getPropertyKeys.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_api_2_issuetype__issueTypeId__properties__propertyKey_": {
            "main": "./lib/actions/delete_api_2_issuetype__issueTypeId__properties__propertyKey_.js",
            "title": "Removes the property from the issue type identified by the id. Ths user removing the property is required\n to have permissions to edit the issue type.",
            "description": "Removes the property from the issue type identified by the id. Ths user removing the property is required\n to have permissions to edit the issue type.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_api_2_issuetype__issueTypeId__properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_issuetype__issueTypeId__properties__propertyKey_": {
            "main": "./lib/actions/get_api_2_issuetype__issueTypeId__properties__propertyKey_.js",
            "title": "Returns the value of the property with a given key from the issue type identified by the id. The user who retrieves\n the property is required to have permissions to view the issue type.",
            "description": "Returns the value of the property with a given key from the issue type identified by the id. The user who retrieves\n the property is required to have permissions to view the issue type.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_issuetype__issueTypeId__properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "put_api_2_issuetype__issueTypeId__properties__propertyKey_": {
            "main": "./lib/actions/put_api_2_issuetype__issueTypeId__properties__propertyKey_.js",
            "title": "Sets the value of the specified issue type's property.\n <p>\n You can use this resource to store a custom data against an issue type identified by the id. The user\n who stores the data is required to have permissions to edit an issue type.\n </p>",
            "description": "Sets the value of the specified issue type's property.\n <p>\n You can use this resource to store a custom data against an issue type identified by the id. The user\n who stores the data is required to have permissions to edit an issue type.\n </p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/put_api_2_issuetype__issueTypeId__properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAutoComplete": {
            "main": "./lib/actions/getAutoComplete.js",
            "title": "Returns the auto complete data required for JQL searches.",
            "description": "Returns the auto complete data required for JQL searches.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAutoComplete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getFieldAutoCompleteForQueryString": {
            "main": "./lib/actions/getFieldAutoCompleteForQueryString.js",
            "title": "Returns auto complete suggestions for JQL search.",
            "description": "Returns auto complete suggestions for JQL search.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getFieldAutoCompleteForQueryString.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "validate": {
            "main": "./lib/actions/validate.js",
            "title": "validate",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/validate.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "areMetricsExposed": {
            "main": "./lib/actions/areMetricsExposed.js",
            "title": "areMetricsExposed",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/areMetricsExposed.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAvailableMetrics": {
            "main": "./lib/actions/getAvailableMetrics.js",
            "title": "getAvailableMetrics",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAvailableMetrics.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "start": {
            "main": "./lib/actions/start.js",
            "title": "start",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/start.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "stop": {
            "main": "./lib/actions/stop.js",
            "title": "stop",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/stop.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getPermissions": {
            "main": "./lib/actions/getPermissions.js",
            "title": "Returns all permissions in the system and whether the currently logged in user has them. You can optionally provide a specific context to get permissions for\n (projectKey OR projectId OR issueKey OR issueId)\n <ul>\n <li> When no context supplied the project related permissions will return true if the user has that permission in ANY project </li>\n <li> If a project context is provided, project related permissions will return true if the user has the permissions in the specified project.\n For permissions that are determined using issue data (e.g Current Assignee), true will be returned if the user meets the permission criteria in ANY issue in that project </li>\n <li> If an issue context is provided, it will return whether or not the user has each permission in that specific issue</li>\n </ul>\n <p>\n NB: The above means that for issue-level permissions (EDIT_ISSUE for example), hasPermission may be true when no context is provided, or when a project context is provided,\n <b>but</b> may be false for any given (or all) issues. This would occur (for example) if Reporters were given the EDIT_ISSUE permission. This is because\n any user could be a reporter, except in the context of a concrete issue, where the reporter is known.\n </p>\n <p>\n Global permissions will still be returned for all scopes.\n </p>\n <p>\n Prior to version 6.4 this service returned project permissions with keys corresponding to com.atlassian.jira.security.Permissions.Permission constants.\n Since 6.4 those keys are considered deprecated and this service returns system project permission keys corresponding to constants defined in com.atlassian.jira.permission.ProjectPermissions.\n Permissions with legacy keys are still also returned for backwards compatibility, they are marked with an attribute deprecatedKey=true.\n The attribute is missing for project permissions with the current keys.\n </p>",
            "description": "Returns all permissions in the system and whether the currently logged in user has them. You can optionally provide a specific context to get permissions for\n (projectKey OR projectId OR issueKey OR issueId)\n <ul>\n <li> When no context supplied the project related permissions will return true if the user has that permission in ANY project </li>\n <li> If a project context is provided, project related permissions will return true if the user has the permissions in the specified project.\n For permissions that are determined using issue data (e.g Current Assignee), true will be returned if the user meets the permission criteria in ANY issue in that project </li>\n <li> If an issue context is provided, it will return whether or not the user has each permission in that specific issue</li>\n </ul>\n <p>\n NB: The above means that for issue-level permissions (EDIT_ISSUE for example), hasPermission may be true when no context is provided, or when a project context is provided,\n <b>but</b> may be false for any given (or all) issues. This would occur (for example) if Reporters were given the EDIT_ISSUE permission. This is because\n any user could be a reporter, except in the context of a concrete issue, where the reporter is known.\n </p>\n <p>\n Global permissions will still be returned for all scopes.\n </p>\n <p>\n Prior to version 6.4 this service returned project permissions with keys corresponding to com.atlassian.jira.security.Permissions.Permission constants.\n Since 6.4 those keys are considered deprecated and this service returns system project permission keys corresponding to constants defined in com.atlassian.jira.permission.ProjectPermissions.\n Permissions with legacy keys are still also returned for backwards compatibility, they are marked with an attribute deprecatedKey=true.\n The attribute is missing for project permissions with the current keys.\n </p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getPermissions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "removePreference": {
            "main": "./lib/actions/removePreference.js",
            "title": "Removes preference of the currently logged in user. Preference key must be provided as input parameters (key). If\n key parameter is not provided or wrong - status code 404. If preference is unset - status code 204.",
            "description": "Removes preference of the currently logged in user. Preference key must be provided as input parameters (key). If\n key parameter is not provided or wrong - status code 404. If preference is unset - status code 204.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/removePreference.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getPreference": {
            "main": "./lib/actions/getPreference.js",
            "title": "Returns preference of the currently logged in user. Preference key must be provided as input parameter (key). The\n value is returned exactly as it is. If key parameter is not provided or wrong - status code 404. If value is\n found  - status code 200.",
            "description": "Returns preference of the currently logged in user. Preference key must be provided as input parameter (key). The\n value is returned exactly as it is. If key parameter is not provided or wrong - status code 404. If value is\n found  - status code 200.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getPreference.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "setPreference": {
            "main": "./lib/actions/setPreference.js",
            "title": "Sets preference of the currently logged in user. Preference key must be provided as input parameters (key). Value\n must be provided as post body. If key or value parameter is not provided - status code 404. If preference is set\n - status code 204.",
            "description": "Sets preference of the currently logged in user. Preference key must be provided as input parameters (key). Value\n must be provided as post body. If key or value parameter is not provided - status code 404. If preference is set\n - status code 204.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/setPreference.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_myself": {
            "main": "./lib/actions/get_api_2_myself.js",
            "title": "Returns currently logged user. This resource cannot be accessed anonymously.",
            "description": "Returns currently logged user. This resource cannot be accessed anonymously.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_myself.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "put_api_2_myself": {
            "main": "./lib/actions/put_api_2_myself.js",
            "title": "Modify currently logged user. The \"value\" fields present will override the existing value.\n Fields skipped in request will not be changed. Only email and display name can be change that way.\n Requires user password.",
            "description": "Modify currently logged user. The \"value\" fields present will override the existing value.\n Fields skipped in request will not be changed. Only email and display name can be change that way.\n Requires user password.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/put_api_2_myself.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "changeMyPassword": {
            "main": "./lib/actions/changeMyPassword.js",
            "title": "Modify caller password.",
            "description": "Modify caller password.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/changeMyPassword.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getNotificationSchemes": {
            "main": "./lib/actions/getNotificationSchemes.js",
            "title": "Returns a <a href=\"#pagination\">paginated</a> list of notification schemes. In order to access notification scheme, the calling user is\n required to have permissions to administer at least one project associated with the requested notification scheme. Each scheme contains\n a list of events and recipient configured to receive notifications for these events. Consumer should allow events without recipients to appear in response.\n The list is ordered by the scheme's name.\n Follow the documentation of /notificationscheme/{id} resource for all details about returned value.",
            "description": "Returns a <a href=\"#pagination\">paginated</a> list of notification schemes. In order to access notification scheme, the calling user is\n required to have permissions to administer at least one project associated with the requested notification scheme. Each scheme contains\n a list of events and recipient configured to receive notifications for these events. Consumer should allow events without recipients to appear in response.\n The list is ordered by the scheme's name.\n Follow the documentation of /notificationscheme/{id} resource for all details about returned value.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getNotificationSchemes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_notificationscheme__id_": {
            "main": "./lib/actions/get_api_2_notificationscheme__id_.js",
            "title": "Returns a full representation of the notification scheme for the given id. This resource will return a\n notification scheme containing a list of events and recipient configured to receive notifications for these events. Consumer\n should allow events without recipients to appear in response. User accessing\n the data is required to have permissions to administer at least one project associated with the requested notification scheme.\n <p>\n Notification recipients can be:\n <ul>\n <li>current assignee - the value of the notificationType is CurrentAssignee</li>\n <li>issue reporter - the value of the notificationType is Reporter</li>\n <li>current user - the value of the notificationType is CurrentUser</li>\n <li>project lead - the value of the notificationType is ProjectLead</li>\n <li>component lead - the value of the notificationType is ComponentLead</li>\n <li>all watchers - the value of the notification type is AllWatchers</li>\n <li>configured user - the value of the notification type is User. Parameter will contain key of the user. Information about the user will be provided\n if <b>user</b> expand parameter is used. </li>\n <li>configured group - the value of the notification type is Group. Parameter will contain name of the group. Information about the group will be provided\n if <b>group</b> expand parameter is used. </li>\n <li>configured email address - the value of the notification type is EmailAddress, additionally information about the email will be provided.</li>\n <li>users or users in groups in the configured custom fields - the value of the notification type is UserCustomField or GroupCustomField. Parameter\n will contain id of the custom field. Information about the field will be provided if <b>field</b> expand parameter is used. </li>\n <li>configured project role - the value of the notification type is ProjectRole. Parameter will contain project role id. Information about the project role\n will be provided if <b>projectRole</b> expand parameter is used. </li>\n </ul>\n Please see the example for reference.\n </p>\n The events can be JIRA system events or events configured by administrator. In case of the system events, data about theirs\n ids, names and descriptions is provided. In case of custom events, the template event is included as well.",
            "description": "Returns a full representation of the notification scheme for the given id. This resource will return a\n notification scheme containing a list of events and recipient configured to receive notifications for these events. Consumer\n should allow events without recipients to appear in response. User accessing\n the data is required to have permissions to administer at least one project associated with the requested notification scheme.\n <p>\n Notification recipients can be:\n <ul>\n <li>current assignee - the value of the notificationType is CurrentAssignee</li>\n <li>issue reporter - the value of the notificationType is Reporter</li>\n <li>current user - the value of the notificationType is CurrentUser</li>\n <li>project lead - the value of the notificationType is ProjectLead</li>\n <li>component lead - the value of the notificationType is ComponentLead</li>\n <li>all watchers - the value of the notification type is AllWatchers</li>\n <li>configured user - the value of the notification type is User. Parameter will contain key of the user. Information about the user will be provided\n if <b>user</b> expand parameter is used. </li>\n <li>configured group - the value of the notification type is Group. Parameter will contain name of the group. Information about the group will be provided\n if <b>group</b> expand parameter is used. </li>\n <li>configured email address - the value of the notification type is EmailAddress, additionally information about the email will be provided.</li>\n <li>users or users in groups in the configured custom fields - the value of the notification type is UserCustomField or GroupCustomField. Parameter\n will contain id of the custom field. Information about the field will be provided if <b>field</b> expand parameter is used. </li>\n <li>configured project role - the value of the notification type is ProjectRole. Parameter will contain project role id. Information about the project role\n will be provided if <b>projectRole</b> expand parameter is used. </li>\n </ul>\n Please see the example for reference.\n </p>\n The events can be JIRA system events or events configured by administrator. In case of the system events, data about theirs\n ids, names and descriptions is provided. In case of custom events, the template event is included as well.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_notificationscheme__id_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getPasswordPolicy": {
            "main": "./lib/actions/getPasswordPolicy.js",
            "title": "Returns the list of requirements for the current password policy. For example, \"The password must have at least 10 characters.\",\n \"The password must not be similar to the user's name or email address.\", etc.",
            "description": "Returns the list of requirements for the current password policy. For example, \"The password must have at least 10 characters.\",\n \"The password must not be similar to the user's name or email address.\", etc.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getPasswordPolicy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "policyCheckCreateUser": {
            "main": "./lib/actions/policyCheckCreateUser.js",
            "title": "Returns a list of statements explaining why the password policy would disallow a proposed password for a new user.\n <p>\n You can use this method to test the password policy validation. This could be done prior to an action \n where a new user and related password are created, using methods like the ones in \n <a href=\"https://docs.atlassian.com/jira/latest/com/atlassian/jira/bc/user/UserService.html\">UserService</a>.      \n For example, you could use this to validate a password in a create user form in the user interface, as the user enters it.<br/>\n The username and new password must be not empty to perform the validation.<br/>\n Note, this method will help you validate against the policy only. It won't check any other validations that might be performed \n when creating a new user, e.g. checking whether a user with the same name already exists.\n </p>",
            "description": "Returns a list of statements explaining why the password policy would disallow a proposed password for a new user.\n <p>\n You can use this method to test the password policy validation. This could be done prior to an action \n where a new user and related password are created, using methods like the ones in \n <a href=\"https://docs.atlassian.com/jira/latest/com/atlassian/jira/bc/user/UserService.html\">UserService</a>.      \n For example, you could use this to validate a password in a create user form in the user interface, as the user enters it.<br/>\n The username and new password must be not empty to perform the validation.<br/>\n Note, this method will help you validate against the policy only. It won't check any other validations that might be performed \n when creating a new user, e.g. checking whether a user with the same name already exists.\n </p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/policyCheckCreateUser.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "policyCheckUpdateUser": {
            "main": "./lib/actions/policyCheckUpdateUser.js",
            "title": "Returns a list of statements explaining why the password policy would disallow a proposed new password for a user with an existing password.\n <p>\n You can use this method to test the password policy validation. This could be done prior to an action where the password \n is actually updated, using methods like <a href=\"https://docs.atlassian.com/jira/latest/com/atlassian/jira/web/action/user/ChangePassword.html\">ChangePassword</a>      \n or <a href=\"https://docs.atlassian.com/jira/latest/com/atlassian/jira/web/action/user/ResetPassword.html\">ResetPassword</a>. \n For example, you could use this to validate a password in a change password form in the user interface, as the user enters it.<br/>\n The user must exist and the username and new password must be not empty, to perform the validation.<br/>\n Note, this method will help you validate against the policy only. It won't check any other validations that might be performed \n when submitting a password change/reset request, e.g. verifying whether the old password is valid.\n </p>",
            "description": "Returns a list of statements explaining why the password policy would disallow a proposed new password for a user with an existing password.\n <p>\n You can use this method to test the password policy validation. This could be done prior to an action where the password \n is actually updated, using methods like <a href=\"https://docs.atlassian.com/jira/latest/com/atlassian/jira/web/action/user/ChangePassword.html\">ChangePassword</a>      \n or <a href=\"https://docs.atlassian.com/jira/latest/com/atlassian/jira/web/action/user/ResetPassword.html\">ResetPassword</a>. \n For example, you could use this to validate a password in a change password form in the user interface, as the user enters it.<br/>\n The user must exist and the username and new password must be not empty, to perform the validation.<br/>\n Note, this method will help you validate against the policy only. It won't check any other validations that might be performed \n when submitting a password change/reset request, e.g. verifying whether the old password is valid.\n </p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/policyCheckUpdateUser.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAllPermissions": {
            "main": "./lib/actions/getAllPermissions.js",
            "title": "Returns all permissions that are present in the JIRA instance - Global, Project and the global ones added by plugins",
            "description": "Returns all permissions that are present in the JIRA instance - Global, Project and the global ones added by plugins",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAllPermissions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getPermissionSchemes": {
            "main": "./lib/actions/getPermissionSchemes.js",
            "title": "Returns a list of all permission schemes.\n <p>\n By default only shortened beans are returned. If you want to include permissions of all the schemes,\n then specify the <b>permissions</b> expand parameter. Permissions will be included also if you specify\n any other expand parameter.\n </p>",
            "description": "Returns a list of all permission schemes.\n <p>\n By default only shortened beans are returned. If you want to include permissions of all the schemes,\n then specify the <b>permissions</b> expand parameter. Permissions will be included also if you specify\n any other expand parameter.\n </p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getPermissionSchemes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createPermissionScheme": {
            "main": "./lib/actions/createPermissionScheme.js",
            "title": "Create a new permission scheme.\n This method can create schemes with a defined permission set, or without.",
            "description": "Create a new permission scheme.\n This method can create schemes with a defined permission set, or without.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createPermissionScheme.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getSchemeAttribute": {
            "main": "./lib/actions/getSchemeAttribute.js",
            "title": "getSchemeAttribute",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getSchemeAttribute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "setSchemeAttribute": {
            "main": "./lib/actions/setSchemeAttribute.js",
            "title": "Updates or inserts the attribute for a permission scheme specified by permission scheme id.\n The attribute consists of the key and the value. The value will be converted to Boolean using Boolean#valueOf.",
            "description": "Updates or inserts the attribute for a permission scheme specified by permission scheme id.\n The attribute consists of the key and the value. The value will be converted to Boolean using Boolean#valueOf.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/setSchemeAttribute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deletePermissionScheme": {
            "main": "./lib/actions/deletePermissionScheme.js",
            "title": "Deletes a permission scheme identified by the given id.",
            "description": "Deletes a permission scheme identified by the given id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deletePermissionScheme.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getPermissionScheme": {
            "main": "./lib/actions/getPermissionScheme.js",
            "title": "Returns a permission scheme identified by the given id.",
            "description": "Returns a permission scheme identified by the given id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getPermissionScheme.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updatePermissionScheme": {
            "main": "./lib/actions/updatePermissionScheme.js",
            "title": "Updates a permission scheme.\n <p>\n If the permissions list is present then it will be set in the permission scheme, which basically means it will overwrite any permission grants that\n existed in the permission scheme. Sending an empty list will remove all permission grants from the permission scheme.\n </p>\n <p>\n To update just the name and description, do not send permissions list at all.\n </p>\n <p>\n To add or remove a single permission grant instead of updating the whole list at once use the <b>{schemeId}/permission/</b> resource.\n </p>",
            "description": "Updates a permission scheme.\n <p>\n If the permissions list is present then it will be set in the permission scheme, which basically means it will overwrite any permission grants that\n existed in the permission scheme. Sending an empty list will remove all permission grants from the permission scheme.\n </p>\n <p>\n To update just the name and description, do not send permissions list at all.\n </p>\n <p>\n To add or remove a single permission grant instead of updating the whole list at once use the <b>{schemeId}/permission/</b> resource.\n </p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updatePermissionScheme.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getPermissionSchemeGrants": {
            "main": "./lib/actions/getPermissionSchemeGrants.js",
            "title": "Returns all permission grants of the given permission scheme.",
            "description": "Returns all permission grants of the given permission scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getPermissionSchemeGrants.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createPermissionGrant": {
            "main": "./lib/actions/createPermissionGrant.js",
            "title": "Creates a permission grant in a permission scheme.",
            "description": "Creates a permission grant in a permission scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createPermissionGrant.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deletePermissionSchemeEntity": {
            "main": "./lib/actions/deletePermissionSchemeEntity.js",
            "title": "Deletes a permission grant from a permission scheme.",
            "description": "Deletes a permission grant from a permission scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deletePermissionSchemeEntity.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getPermissionSchemeGrant": {
            "main": "./lib/actions/getPermissionSchemeGrant.js",
            "title": "Returns a permission grant identified by the given id.",
            "description": "Returns a permission grant identified by the given id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getPermissionSchemeGrant.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getPriorities": {
            "main": "./lib/actions/getPriorities.js",
            "title": "Returns a list of all issue priorities.",
            "description": "Returns a list of all issue priorities.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getPriorities.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getPriority": {
            "main": "./lib/actions/getPriority.js",
            "title": "Returns an issue priority.",
            "description": "Returns an issue priority.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getPriority.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAllProjects": {
            "main": "./lib/actions/getAllProjects.js",
            "title": "Returns all projects which are visible for the currently logged in user. If no user is logged in, it returns the\n list of projects that are visible when using anonymous access.",
            "description": "Returns all projects which are visible for the currently logged in user. If no user is logged in, it returns the\n list of projects that are visible when using anonymous access.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAllProjects.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createProject": {
            "main": "./lib/actions/createProject.js",
            "title": "Creates a new project.",
            "description": "Creates a new project.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createProject.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAllProjectTypes": {
            "main": "./lib/actions/getAllProjectTypes.js",
            "title": "Returns all the project types defined on the JIRA instance, not taking into account whether\n the license to use those project types is valid or not.",
            "description": "Returns all the project types defined on the JIRA instance, not taking into account whether\n the license to use those project types is valid or not.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAllProjectTypes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getProjectTypeByKey": {
            "main": "./lib/actions/getProjectTypeByKey.js",
            "title": "Returns the project type with the given key.",
            "description": "Returns the project type with the given key.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getProjectTypeByKey.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAccessibleProjectTypeByKey": {
            "main": "./lib/actions/getAccessibleProjectTypeByKey.js",
            "title": "Returns the project type with the given key, if it is accessible to the logged in user.\n This takes into account whether the user is licensed on the Application that defines the project type.",
            "description": "Returns the project type with the given key, if it is accessible to the logged in user.\n This takes into account whether the user is licensed on the Application that defines the project type.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAccessibleProjectTypeByKey.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteProject": {
            "main": "./lib/actions/deleteProject.js",
            "title": "Deletes a project.",
            "description": "Deletes a project.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteProject.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_project__projectIdOrKey_": {
            "main": "./lib/actions/get_api_2_project__projectIdOrKey_.js",
            "title": "Contains a full representation of a project in JSON format.\n <p>\n All project keys associated with the project will only be returned if <code>expand=projectKeys</code>.\n <p>",
            "description": "Contains a full representation of a project in JSON format.\n <p>\n All project keys associated with the project will only be returned if <code>expand=projectKeys</code>.\n <p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_project__projectIdOrKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updateProject": {
            "main": "./lib/actions/updateProject.js",
            "title": "Updates a project.\n <p>\n Only non null values sent in JSON will be updated in the project.</p>\n <p>\n Values available for the assigneeType field are: \"PROJECT_LEAD\" and \"UNASSIGNED\".</p>",
            "description": "Updates a project.\n <p>\n Only non null values sent in JSON will be updated in the project.</p>\n <p>\n Values available for the assigneeType field are: \"PROJECT_LEAD\" and \"UNASSIGNED\".</p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updateProject.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "post_api_2_project__projectIdOrKey__avatar": {
            "main": "./lib/actions/post_api_2_project__projectIdOrKey__avatar.js",
            "title": "Converts temporary avatar into a real avatar",
            "description": "Converts temporary avatar into a real avatar",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/post_api_2_project__projectIdOrKey__avatar.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "put_api_2_project__projectIdOrKey__avatar": {
            "main": "./lib/actions/put_api_2_project__projectIdOrKey__avatar.js",
            "title": "put_api_2_project__projectIdOrKey__avatar",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/put_api_2_project__projectIdOrKey__avatar.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "post_api_2_project__projectIdOrKey__avatar_temporary": {
            "main": "./lib/actions/post_api_2_project__projectIdOrKey__avatar_temporary.js",
            "title": "Creates temporary avatar using multipart. The response is sent back as JSON stored in a textarea. This is because\n the client uses remote iframing to submit avatars using multipart. So we must send them a valid HTML page back from\n which the client parses the JSON.",
            "description": "Creates temporary avatar using multipart. The response is sent back as JSON stored in a textarea. This is because\n the client uses remote iframing to submit avatars using multipart. So we must send them a valid HTML page back from\n which the client parses the JSON.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/post_api_2_project__projectIdOrKey__avatar_temporary.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_api_2_project__projectIdOrKey__avatar__id_": {
            "main": "./lib/actions/delete_api_2_project__projectIdOrKey__avatar__id_.js",
            "title": "Deletes avatar",
            "description": "Deletes avatar",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_api_2_project__projectIdOrKey__avatar__id_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_project__projectIdOrKey__avatars": {
            "main": "./lib/actions/get_api_2_project__projectIdOrKey__avatars.js",
            "title": "Returns all avatars which are visible for the currently logged in user.  The avatars are grouped into\n system and custom.",
            "description": "Returns all avatars which are visible for the currently logged in user.  The avatars are grouped into\n system and custom.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_project__projectIdOrKey__avatars.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getProjectComponents": {
            "main": "./lib/actions/getProjectComponents.js",
            "title": "Contains a full representation of a the specified project's components.",
            "description": "Contains a full representation of a the specified project's components.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getProjectComponents.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_project__projectIdOrKey__properties": {
            "main": "./lib/actions/get_api_2_project__projectIdOrKey__properties.js",
            "title": "Returns the keys of all properties for the project identified by the key or by the id.",
            "description": "Returns the keys of all properties for the project identified by the key or by the id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_project__projectIdOrKey__properties.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_api_2_project__projectIdOrKey__properties__propertyKey_": {
            "main": "./lib/actions/delete_api_2_project__projectIdOrKey__properties__propertyKey_.js",
            "title": "Removes the property from the project identified by the key or by the id. Ths user removing the property is required\n to have permissions to administer the project.",
            "description": "Removes the property from the project identified by the key or by the id. Ths user removing the property is required\n to have permissions to administer the project.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_api_2_project__projectIdOrKey__properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_project__projectIdOrKey__properties__propertyKey_": {
            "main": "./lib/actions/get_api_2_project__projectIdOrKey__properties__propertyKey_.js",
            "title": "Returns the value of the property with a given key from the project identified by the key or by the id. The user who retrieves\n the property is required to have permissions to read the project.",
            "description": "Returns the value of the property with a given key from the project identified by the key or by the id. The user who retrieves\n the property is required to have permissions to read the project.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_project__projectIdOrKey__properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "put_api_2_project__projectIdOrKey__properties__propertyKey_": {
            "main": "./lib/actions/put_api_2_project__projectIdOrKey__properties__propertyKey_.js",
            "title": "Sets the value of the specified project's property.\n <p>\n You can use this resource to store a custom data against the project identified by the key or by the id. The user\n who stores the data is required to have permissions to administer the project.\n </p>",
            "description": "Sets the value of the specified project's property.\n <p>\n You can use this resource to store a custom data against the project identified by the key or by the id. The user\n who stores the data is required to have permissions to administer the project.\n </p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/put_api_2_project__projectIdOrKey__properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_project__projectIdOrKey__role": {
            "main": "./lib/actions/get_api_2_project__projectIdOrKey__role.js",
            "title": "Returns all roles in the given project Id or key, with links to full details on each role.",
            "description": "Returns all roles in the given project Id or key, with links to full details on each role.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_project__projectIdOrKey__role.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteActor": {
            "main": "./lib/actions/deleteActor.js",
            "title": "Deletes actors (users or groups) from a project role.\n <p>\n <ul>\n <li>Delete a user from the role: <code>/rest/api/2/project/{projectIdOrKey}/role/{roleId}?user={username}</code></li>\n <li>Delete a group from the role: <code>/rest/api/2/project/{projectIdOrKey}/role/{roleId}?group={groupname}</code></li>\n </ul>",
            "description": "Deletes actors (users or groups) from a project role.\n <p>\n <ul>\n <li>Delete a user from the role: <code>/rest/api/2/project/{projectIdOrKey}/role/{roleId}?user={username}</code></li>\n <li>Delete a group from the role: <code>/rest/api/2/project/{projectIdOrKey}/role/{roleId}?group={groupname}</code></li>\n </ul>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteActor.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getProjectRole": {
            "main": "./lib/actions/getProjectRole.js",
            "title": "Returns the details for a given project role in a project.",
            "description": "Returns the details for a given project role in a project.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getProjectRole.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "addActorUsers": {
            "main": "./lib/actions/addActorUsers.js",
            "title": "Adds an actor (user or group) to a project role.",
            "description": "Adds an actor (user or group) to a project role.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addActorUsers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "setActors": {
            "main": "./lib/actions/setActors.js",
            "title": "Updates a project role to include the specified actors (users or groups).",
            "description": "Updates a project role to include the specified actors (users or groups).",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/setActors.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAllStatuses": {
            "main": "./lib/actions/getAllStatuses.js",
            "title": "Get all issue types with valid status values for a project",
            "description": "Get all issue types with valid status values for a project",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAllStatuses.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updateProjectType": {
            "main": "./lib/actions/updateProjectType.js",
            "title": "Updates the type of a project.",
            "description": "Updates the type of a project.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updateProjectType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getProjectVersionsPaginated": {
            "main": "./lib/actions/getProjectVersionsPaginated.js",
            "title": "Returns all versions for the specified project. Results are <a href=\"#pagination\">paginated</a>.\n <p>\n Results can be ordered by the following fields:\n <ul>\n <li>sequence</li>\n <li>name</li>\n <li>startDate</li>\n <li>releaseDate</li>\n </ul>\n </p>",
            "description": "Returns all versions for the specified project. Results are <a href=\"#pagination\">paginated</a>.\n <p>\n Results can be ordered by the following fields:\n <ul>\n <li>sequence</li>\n <li>name</li>\n <li>startDate</li>\n <li>releaseDate</li>\n </ul>\n </p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getProjectVersionsPaginated.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getProjectVersions": {
            "main": "./lib/actions/getProjectVersions.js",
            "title": "Contains a full representation of a the specified project's versions.",
            "description": "Contains a full representation of a the specified project's versions.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getProjectVersions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_project__projectKeyOrId__issuesecuritylevelscheme": {
            "main": "./lib/actions/get_api_2_project__projectKeyOrId__issuesecuritylevelscheme.js",
            "title": "Returns the issue security scheme for project.",
            "description": "Returns the issue security scheme for project.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_project__projectKeyOrId__issuesecuritylevelscheme.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_project__projectKeyOrId__notificationscheme": {
            "main": "./lib/actions/get_api_2_project__projectKeyOrId__notificationscheme.js",
            "title": "Gets a notification scheme associated with the project.\n Follow the documentation of /notificationscheme/{id} resource for all details about returned value.",
            "description": "Gets a notification scheme associated with the project.\n Follow the documentation of /notificationscheme/{id} resource for all details about returned value.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_project__projectKeyOrId__notificationscheme.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAssignedPermissionScheme": {
            "main": "./lib/actions/getAssignedPermissionScheme.js",
            "title": "Gets a permission scheme assigned with a project.",
            "description": "Gets a permission scheme assigned with a project.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAssignedPermissionScheme.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "assignPermissionScheme": {
            "main": "./lib/actions/assignPermissionScheme.js",
            "title": "Assigns a permission scheme with a project.",
            "description": "Assigns a permission scheme with a project.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/assignPermissionScheme.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getSecurityLevelsForProject": {
            "main": "./lib/actions/getSecurityLevelsForProject.js",
            "title": "Returns all security levels for the project that the current logged in user has access to.\n If the user does not have the Set Issue Security permission, the list will be empty.",
            "description": "Returns all security levels for the project that the current logged in user has access to.\n If the user does not have the Set Issue Security permission, the list will be empty.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getSecurityLevelsForProject.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAllProjectCategories": {
            "main": "./lib/actions/getAllProjectCategories.js",
            "title": "Returns all project categories",
            "description": "Returns all project categories",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAllProjectCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createProjectCategory": {
            "main": "./lib/actions/createProjectCategory.js",
            "title": "Create a project category via POST.",
            "description": "Create a project category via POST.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createProjectCategory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "removeProjectCategory": {
            "main": "./lib/actions/removeProjectCategory.js",
            "title": "Delete a project category.",
            "description": "Delete a project category.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/removeProjectCategory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getProjectCategoryById": {
            "main": "./lib/actions/getProjectCategoryById.js",
            "title": "Contains a representation of a project category in JSON format.",
            "description": "Contains a representation of a project category in JSON format.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getProjectCategoryById.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updateProjectCategory": {
            "main": "./lib/actions/updateProjectCategory.js",
            "title": "Modify a project category via PUT. Any fields present in the PUT will override existing values. As a convenience, if a field\n is not present, it is silently ignored.",
            "description": "Modify a project category via PUT. Any fields present in the PUT will override existing values. As a convenience, if a field\n is not present, it is silently ignored.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updateProjectCategory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_projectvalidate_key": {
            "main": "./lib/actions/get_api_2_projectvalidate_key.js",
            "title": "Validates a project key.",
            "description": "Validates a project key.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_projectvalidate_key.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getReindexInfo": {
            "main": "./lib/actions/getReindexInfo.js",
            "title": "Returns information on the system reindexes.  If a reindex is currently taking place then information about this reindex is returned.\n If there is no active index task, then returns information about the latest reindex task run, otherwise returns a 404\n indicating that no reindex has taken place.",
            "description": "Returns information on the system reindexes.  If a reindex is currently taking place then information about this reindex is returned.\n If there is no active index task, then returns information about the latest reindex task run, otherwise returns a 404\n indicating that no reindex has taken place.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getReindexInfo.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "reindex": {
            "main": "./lib/actions/reindex.js",
            "title": "Kicks off a reindex.  Need Admin permissions to perform this reindex.",
            "description": "Kicks off a reindex.  Need Admin permissions to perform this reindex.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/reindex.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "reindexIssues": {
            "main": "./lib/actions/reindexIssues.js",
            "title": "Reindexes one or more individual issues.  Indexing is performed synchronously - the call returns when indexing of\n the issues has completed or a failure occurs.\n <p>\n Use either explicitly specified issue IDs or a JQL query to select issues to reindex.",
            "description": "Reindexes one or more individual issues.  Indexing is performed synchronously - the call returns when indexing of\n the issues has completed or a failure occurs.\n <p>\n Use either explicitly specified issue IDs or a JQL query to select issues to reindex.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/reindexIssues.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getReindexProgress": {
            "main": "./lib/actions/getReindexProgress.js",
            "title": "Returns information on the system reindexes.  If a reindex is currently taking place then information about this reindex is returned.\n If there is no active index task, then returns information about the latest reindex task run, otherwise returns a 404\n indicating that no reindex has taken place.",
            "description": "Returns information on the system reindexes.  If a reindex is currently taking place then information about this reindex is returned.\n If there is no active index task, then returns information about the latest reindex task run, otherwise returns a 404\n indicating that no reindex has taken place.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getReindexProgress.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "processRequests": {
            "main": "./lib/actions/processRequests.js",
            "title": "Executes any pending reindex requests.  Returns a JSON array containing the IDs of the reindex requests\n that are being processed.  Execution is asynchronous - progress of the returned tasks can be monitored through\n other REST calls.",
            "description": "Executes any pending reindex requests.  Returns a JSON array containing the IDs of the reindex requests\n that are being processed.  Execution is asynchronous - progress of the returned tasks can be monitored through\n other REST calls.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/processRequests.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getProgressBulk": {
            "main": "./lib/actions/getProgressBulk.js",
            "title": "Retrieves the progress of a multiple reindex requests.  Only reindex requests that actually exist will be returned\n in the results.",
            "description": "Retrieves the progress of a multiple reindex requests.  Only reindex requests that actually exist will be returned\n in the results.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getProgressBulk.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getProgress": {
            "main": "./lib/actions/getProgress.js",
            "title": "Retrieves the progress of a single reindex request.",
            "description": "Retrieves the progress of a single reindex request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getProgress.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getResolutions": {
            "main": "./lib/actions/getResolutions.js",
            "title": "Returns a list of all resolutions.",
            "description": "Returns a list of all resolutions.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getResolutions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getResolution": {
            "main": "./lib/actions/getResolution.js",
            "title": "Returns a resolution.",
            "description": "Returns a resolution.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getResolution.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_role": {
            "main": "./lib/actions/get_api_2_role.js",
            "title": "Get all the ProjectRoles available in JIRA. Currently this list is global.",
            "description": "Get all the ProjectRoles available in JIRA. Currently this list is global.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_role.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createProjectRole": {
            "main": "./lib/actions/createProjectRole.js",
            "title": "Creates a new ProjectRole to be available in JIRA.\n The created role does not have any default actors assigned.",
            "description": "Creates a new ProjectRole to be available in JIRA.\n The created role does not have any default actors assigned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createProjectRole.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteProjectRole": {
            "main": "./lib/actions/deleteProjectRole.js",
            "title": "Deletes a role. May return 403 in the future",
            "description": "Deletes a role. May return 403 in the future",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteProjectRole.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getProjectRolesById": {
            "main": "./lib/actions/getProjectRolesById.js",
            "title": "Get a specific ProjectRole available in JIRA.",
            "description": "Get a specific ProjectRole available in JIRA.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getProjectRolesById.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "partialUpdateProjectRole": {
            "main": "./lib/actions/partialUpdateProjectRole.js",
            "title": "Partially updates a roles name or description.",
            "description": "Partially updates a roles name or description.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/partialUpdateProjectRole.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "fullyUpdateProjectRole": {
            "main": "./lib/actions/fullyUpdateProjectRole.js",
            "title": "Fully updates a roles. Both name and description must be given.",
            "description": "Fully updates a roles. Both name and description must be given.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/fullyUpdateProjectRole.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteProjectRoleActorsFromRole": {
            "main": "./lib/actions/deleteProjectRoleActorsFromRole.js",
            "title": "Removes default actor from the given role.",
            "description": "Removes default actor from the given role.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteProjectRoleActorsFromRole.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getProjectRoleActorsForRole": {
            "main": "./lib/actions/getProjectRoleActorsForRole.js",
            "title": "Gets default actors for the given role.",
            "description": "Gets default actors for the given role.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getProjectRoleActorsForRole.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "addProjectRoleActorsToRole": {
            "main": "./lib/actions/addProjectRoleActorsToRole.js",
            "title": "Adds default actors to the given role. The request data should contain a list of usernames or a list of groups to add.",
            "description": "Adds default actors to the given role. The request data should contain a list of usernames or a list of groups to add.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addProjectRoleActorsToRole.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "addFieldToDefaultScreen": {
            "main": "./lib/actions/addFieldToDefaultScreen.js",
            "title": "Adds field or custom field to the default tab",
            "description": "Adds field or custom field to the default tab",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addFieldToDefaultScreen.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getFieldsToAdd": {
            "main": "./lib/actions/getFieldsToAdd.js",
            "title": "Gets available fields for screen. i.e ones that haven't already been added.",
            "description": "Gets available fields for screen. i.e ones that haven't already been added.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getFieldsToAdd.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAllTabs": {
            "main": "./lib/actions/getAllTabs.js",
            "title": "Returns a list of all tabs for the given screen",
            "description": "Returns a list of all tabs for the given screen",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAllTabs.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "addTab": {
            "main": "./lib/actions/addTab.js",
            "title": "Creates tab for given screen",
            "description": "Creates tab for given screen",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addTab.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteTab": {
            "main": "./lib/actions/deleteTab.js",
            "title": "Deletes tab to give screen",
            "description": "Deletes tab to give screen",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteTab.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "renameTab": {
            "main": "./lib/actions/renameTab.js",
            "title": "Renames tab on given screen",
            "description": "Renames tab on given screen",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/renameTab.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAllFields": {
            "main": "./lib/actions/getAllFields.js",
            "title": "Gets all fields for a given tab",
            "description": "Gets all fields for a given tab",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAllFields.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "addField": {
            "main": "./lib/actions/addField.js",
            "title": "Adds field to the given tab.",
            "description": "Adds field to the given tab.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addField.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "removeField": {
            "main": "./lib/actions/removeField.js",
            "title": "Removes field from given tab",
            "description": "Removes field from given tab",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/removeField.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "moveField": {
            "main": "./lib/actions/moveField.js",
            "title": "Moves field on the given tab",
            "description": "Moves field on the given tab",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/moveField.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "moveTab": {
            "main": "./lib/actions/moveTab.js",
            "title": "Moves tab position",
            "description": "Moves tab position",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/moveTab.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "search": {
            "main": "./lib/actions/search.js",
            "title": "Searches for issues using JQL.\n <p>\n <b>Sorting</b>\n the <code>jql</code> parameter is a full <a href=\"http://confluence.atlassian.com/display/JIRA/Advanced+Searching\">JQL</a>\n expression, and includes an <code>ORDER BY</code> clause.\n </p>\n <p>\n The <code>fields</code> param (which can be specified multiple times) gives a comma-separated list of fields\n to include in the response. This can be used to retrieve a subset of fields.\n A particular field can be excluded by prefixing it with a minus.\n <p>\n By default, only navigable (<code>*navigable</code>) fields are returned in this search resource. Note: the default is different\n in the get-issue resource -- the default there all fields (<code>*all</code>).\n <ul>\n <li><code>*all</code> - include all fields</li>\n <li><code>*navigable</code> - include just navigable fields</li>\n <li><code>summary,comment</code> - include just the summary and comments</li>\n <li><code>-description</code> - include navigable fields except the description (the default is <code>*navigable</code> for search)</li>\n <li><code>*all,-comment</code> - include everything except comments</li>\n </ul>\n <p>\n </p>\n <p><b>GET vs POST:</b>\n If the JQL query is too large to be encoded as a query param you should instead\n POST to this resource.\n </p>\n <p>\n <b>Expanding Issues in the Search Result:</b>\n It is possible to expand the issues returned by directly specifying the expansion on the expand parameter passed\n in to this resources.\n </p>\n <p>\n For instance, to expand the &quot;changelog&quot; for all the issues on the search result, it is neccesary to\n specify &quot;changelog&quot; as one of the values to expand.\n </p>",
            "description": "Searches for issues using JQL.\n <p>\n <b>Sorting</b>\n the <code>jql</code> parameter is a full <a href=\"http://confluence.atlassian.com/display/JIRA/Advanced+Searching\">JQL</a>\n expression, and includes an <code>ORDER BY</code> clause.\n </p>\n <p>\n The <code>fields</code> param (which can be specified multiple times) gives a comma-separated list of fields\n to include in the response. This can be used to retrieve a subset of fields.\n A particular field can be excluded by prefixing it with a minus.\n <p>\n By default, only navigable (<code>*navigable</code>) fields are returned in this search resource. Note: the default is different\n in the get-issue resource -- the default there all fields (<code>*all</code>).\n <ul>\n <li><code>*all</code> - include all fields</li>\n <li><code>*navigable</code> - include just navigable fields</li>\n <li><code>summary,comment</code> - include just the summary and comments</li>\n <li><code>-description</code> - include navigable fields except the description (the default is <code>*navigable</code> for search)</li>\n <li><code>*all,-comment</code> - include everything except comments</li>\n </ul>\n <p>\n </p>\n <p><b>GET vs POST:</b>\n If the JQL query is too large to be encoded as a query param you should instead\n POST to this resource.\n </p>\n <p>\n <b>Expanding Issues in the Search Result:</b>\n It is possible to expand the issues returned by directly specifying the expansion on the expand parameter passed\n in to this resources.\n </p>\n <p>\n For instance, to expand the &quot;changelog&quot; for all the issues on the search result, it is neccesary to\n specify &quot;changelog&quot; as one of the values to expand.\n </p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/search.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "searchUsingSearchRequest": {
            "main": "./lib/actions/searchUsingSearchRequest.js",
            "title": "Performs a search using JQL.",
            "description": "Performs a search using JQL.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/searchUsingSearchRequest.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getIssuesecuritylevel": {
            "main": "./lib/actions/getIssuesecuritylevel.js",
            "title": "Returns a full representation of the security level that has the given id.",
            "description": "Returns a full representation of the security level that has the given id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getIssuesecuritylevel.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getServerInfo": {
            "main": "./lib/actions/getServerInfo.js",
            "title": "Returns general information about the current JIRA server.",
            "description": "Returns general information about the current JIRA server.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getServerInfo.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "setBaseURL": {
            "main": "./lib/actions/setBaseURL.js",
            "title": "Sets the base URL that is configured for this JIRA instance.",
            "description": "Sets the base URL that is configured for this JIRA instance.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/setBaseURL.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getIssueNavigatorDefaultColumns": {
            "main": "./lib/actions/getIssueNavigatorDefaultColumns.js",
            "title": "Returns the default system columns for issue navigator. Admin permission will be required.",
            "description": "Returns the default system columns for issue navigator. Admin permission will be required.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getIssueNavigatorDefaultColumns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "setIssueNavigatorDefaultColumns": {
            "main": "./lib/actions/setIssueNavigatorDefaultColumns.js",
            "title": "Sets the default system columns for issue navigator. Admin permission will be required.",
            "description": "Sets the default system columns for issue navigator. Admin permission will be required.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/setIssueNavigatorDefaultColumns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getStatuses": {
            "main": "./lib/actions/getStatuses.js",
            "title": "Returns a list of all statuses",
            "description": "Returns a list of all statuses",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getStatuses.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getStatus": {
            "main": "./lib/actions/getStatus.js",
            "title": "Returns a full representation of the Status having the given id or name.",
            "description": "Returns a full representation of the Status having the given id or name.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getStatus.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getStatusCategories": {
            "main": "./lib/actions/getStatusCategories.js",
            "title": "Returns a list of all status categories",
            "description": "Returns a list of all status categories",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getStatusCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getStatusCategory": {
            "main": "./lib/actions/getStatusCategory.js",
            "title": "Returns a full representation of the StatusCategory having the given id or key",
            "description": "Returns a full representation of the StatusCategory having the given id or key",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getStatusCategory.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAvatars": {
            "main": "./lib/actions/getAvatars.js",
            "title": "getAvatars",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAvatars.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "post_api_2_universal_avatar_type__type__owner__owningObjectId__avatar": {
            "main": "./lib/actions/post_api_2_universal_avatar_type__type__owner__owningObjectId__avatar.js",
            "title": "post_api_2_universal_avatar_type__type__owner__owningObjectId__avatar",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/post_api_2_universal_avatar_type__type__owner__owningObjectId__avatar.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_api_2_universal_avatar_type__type__owner__owningObjectId__avatar__id_": {
            "main": "./lib/actions/delete_api_2_universal_avatar_type__type__owner__owningObjectId__avatar__id_.js",
            "title": "Deletes avatar",
            "description": "Deletes avatar",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_api_2_universal_avatar_type__type__owner__owningObjectId__avatar__id_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "post_api_2_universal_avatar_type__type__owner__owningObjectId__temp": {
            "main": "./lib/actions/post_api_2_universal_avatar_type__type__owner__owningObjectId__temp.js",
            "title": "post_api_2_universal_avatar_type__type__owner__owningObjectId__temp",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/post_api_2_universal_avatar_type__type__owner__owningObjectId__temp.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getUpgradeResult": {
            "main": "./lib/actions/getUpgradeResult.js",
            "title": "Returns the result of the last upgrade task.\n\n Returns {@link javax.ws.rs.core.Response#seeOther(java.net.URI)} if still running.",
            "description": "Returns the result of the last upgrade task.\n\n Returns {@link javax.ws.rs.core.Response#seeOther(java.net.URI)} if still running.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getUpgradeResult.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "runUpgradesNow": {
            "main": "./lib/actions/runUpgradesNow.js",
            "title": "Runs any pending delayed upgrade tasks.  Need Admin permissions to do this.",
            "description": "Runs any pending delayed upgrade tasks.  Need Admin permissions to do this.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/runUpgradesNow.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "removeUser": {
            "main": "./lib/actions/removeUser.js",
            "title": "Removes user.",
            "description": "Removes user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/removeUser.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_user": {
            "main": "./lib/actions/get_api_2_user.js",
            "title": "Returns a user. This resource cannot be accessed anonymously.",
            "description": "Returns a user. This resource cannot be accessed anonymously.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_user.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createUser": {
            "main": "./lib/actions/createUser.js",
            "title": "Create user. By default created user will not be notified with email.\n If password field is not set then password will be randomly generated.",
            "description": "Create user. By default created user will not be notified with email.\n If password field is not set then password will be randomly generated.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createUser.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "put_api_2_user": {
            "main": "./lib/actions/put_api_2_user.js",
            "title": "Modify user. The \"value\" fields present will override the existing value.\n Fields skipped in request will not be changed.",
            "description": "Modify user. The \"value\" fields present will override the existing value.\n Fields skipped in request will not be changed.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/put_api_2_user.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "removeUserFromApplication": {
            "main": "./lib/actions/removeUserFromApplication.js",
            "title": "Remove user from given application. Admin permission will be required to perform this operation.",
            "description": "Remove user from given application. Admin permission will be required to perform this operation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/removeUserFromApplication.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "addUserToApplication": {
            "main": "./lib/actions/addUserToApplication.js",
            "title": "Add user to given application. Admin permission will be required to perform this operation.",
            "description": "Add user to given application. Admin permission will be required to perform this operation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/addUserToApplication.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "findBulkAssignableUsers": {
            "main": "./lib/actions/findBulkAssignableUsers.js",
            "title": "Returns a list of users that match the search string and can be assigned issues for all the given projects.\n This resource cannot be accessed anonymously.",
            "description": "Returns a list of users that match the search string and can be assigned issues for all the given projects.\n This resource cannot be accessed anonymously.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/findBulkAssignableUsers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "findAssignableUsers": {
            "main": "./lib/actions/findAssignableUsers.js",
            "title": "Returns a list of users that match the search string. This resource cannot be accessed anonymously.\n Please note that this resource should be called with an issue key when a list of assignable users is retrieved\n for editing.  For create only a project key should be supplied.  The list of assignable users may be incorrect\n if it's called with the project key for editing.",
            "description": "Returns a list of users that match the search string. This resource cannot be accessed anonymously.\n Please note that this resource should be called with an issue key when a list of assignable users is retrieved\n for editing.  For create only a project key should be supplied.  The list of assignable users may be incorrect\n if it's called with the project key for editing.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/findAssignableUsers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "post_api_2_user_avatar": {
            "main": "./lib/actions/post_api_2_user_avatar.js",
            "title": "Converts temporary avatar into a real avatar",
            "description": "Converts temporary avatar into a real avatar",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/post_api_2_user_avatar.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "put_api_2_user_avatar": {
            "main": "./lib/actions/put_api_2_user_avatar.js",
            "title": "put_api_2_user_avatar",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/put_api_2_user_avatar.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "post_api_2_user_avatar_temporary": {
            "main": "./lib/actions/post_api_2_user_avatar_temporary.js",
            "title": "Creates temporary avatar using multipart. The response is sent back as JSON stored in a textarea. This is because\n the client uses remote iframing to submit avatars using multipart. So we must send them a valid HTML page back from\n which the client parses the JSON from.\n <p>\n Creating a temporary avatar is part of a 3-step process in uploading a new\n avatar for a user: upload, crop, confirm. This endpoint allows you to use a multipart upload\n instead of sending the image directly as the request body.\n </p>\n <p>\n You *must* use \"avatar\" as the name of the upload parameter:</p>\n <p/>\n <pre>\n curl -c cookiejar.txt -X POST -u admin:admin -H \"X-Atlassian-Token: no-check\" \\\n   -F \"avatar=@mynewavatar.png;type=image/png\" \\\n   'http://localhost:8090/jira/rest/api/2/user/avatar/temporary?username=admin'\n </pre>",
            "description": "Creates temporary avatar using multipart. The response is sent back as JSON stored in a textarea. This is because\n the client uses remote iframing to submit avatars using multipart. So we must send them a valid HTML page back from\n which the client parses the JSON from.\n <p>\n Creating a temporary avatar is part of a 3-step process in uploading a new\n avatar for a user: upload, crop, confirm. This endpoint allows you to use a multipart upload\n instead of sending the image directly as the request body.\n </p>\n <p>\n You *must* use \"avatar\" as the name of the upload parameter:</p>\n <p/>\n <pre>\n curl -c cookiejar.txt -X POST -u admin:admin -H \"X-Atlassian-Token: no-check\" \\\n   -F \"avatar=@mynewavatar.png;type=image/png\" \\\n   'http://localhost:8090/jira/rest/api/2/user/avatar/temporary?username=admin'\n </pre>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/post_api_2_user_avatar_temporary.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_api_2_user_avatar__id_": {
            "main": "./lib/actions/delete_api_2_user_avatar__id_.js",
            "title": "Deletes avatar",
            "description": "Deletes avatar",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_api_2_user_avatar__id_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_user_avatars": {
            "main": "./lib/actions/get_api_2_user_avatars.js",
            "title": "Returns all avatars which are visible for the currently logged in user.",
            "description": "Returns all avatars which are visible for the currently logged in user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_user_avatars.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_api_2_user_columns": {
            "main": "./lib/actions/delete_api_2_user_columns.js",
            "title": "Reset the default columns for the given user to the system default. Admin permission will be required to get\n columns for a user other than the currently logged in user.",
            "description": "Reset the default columns for the given user to the system default. Admin permission will be required to get\n columns for a user other than the currently logged in user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_api_2_user_columns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_user_columns": {
            "main": "./lib/actions/get_api_2_user_columns.js",
            "title": "Returns the default columns for the given user. Admin permission will be required to get columns for a user\n other than the currently logged in user.",
            "description": "Returns the default columns for the given user. Admin permission will be required to get columns for a user\n other than the currently logged in user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_user_columns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "put_api_2_user_columns": {
            "main": "./lib/actions/put_api_2_user_columns.js",
            "title": "Sets the default columns for the given user.  Admin permission will be required to get columns for a user\n other than the currently logged in user.",
            "description": "Sets the default columns for the given user.  Admin permission will be required to get columns for a user\n other than the currently logged in user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/put_api_2_user_columns.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "changeUserPassword": {
            "main": "./lib/actions/changeUserPassword.js",
            "title": "Modify user password.",
            "description": "Modify user password.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/changeUserPassword.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "findUsersWithAllPermissions": {
            "main": "./lib/actions/findUsersWithAllPermissions.js",
            "title": "Returns a list of active users that match the search string and have all specified permissions for the project or issue.<br>\n This resource can be accessed by users with ADMINISTER_PROJECT permission for the project or global ADMIN or SYSADMIN rights.",
            "description": "Returns a list of active users that match the search string and have all specified permissions for the project or issue.<br>\n This resource can be accessed by users with ADMINISTER_PROJECT permission for the project or global ADMIN or SYSADMIN rights.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/findUsersWithAllPermissions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "findUsersForPicker": {
            "main": "./lib/actions/findUsersForPicker.js",
            "title": "Returns a list of users matching query with highlighting. This resource cannot be accessed anonymously.",
            "description": "Returns a list of users matching query with highlighting. This resource cannot be accessed anonymously.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/findUsersForPicker.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_user_properties_": {
            "main": "./lib/actions/get_api_2_user_properties_.js",
            "title": "Returns the keys of all properties for the user identified by the key or by the id.",
            "description": "Returns the keys of all properties for the user identified by the key or by the id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_user_properties_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_api_2_user_properties__propertyKey_": {
            "main": "./lib/actions/delete_api_2_user_properties__propertyKey_.js",
            "title": "Removes the property from the user identified by the key or by the id. Ths user removing the property is required\n to have permissions to administer the user.",
            "description": "Removes the property from the user identified by the key or by the id. Ths user removing the property is required\n to have permissions to administer the user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_api_2_user_properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_user_properties__propertyKey_": {
            "main": "./lib/actions/get_api_2_user_properties__propertyKey_.js",
            "title": "Returns the value of the property with a given key from the user identified by the key or by the id. The user who retrieves\n the property is required to have permissions to read the user.",
            "description": "Returns the value of the property with a given key from the user identified by the key or by the id. The user who retrieves\n the property is required to have permissions to read the user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_user_properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "put_api_2_user_properties__propertyKey_": {
            "main": "./lib/actions/put_api_2_user_properties__propertyKey_.js",
            "title": "Sets the value of the specified user's property.\n <p>\n You can use this resource to store a custom data against the user identified by the key or by the id. The user\n who stores the data is required to have permissions to administer the user.\n </p>",
            "description": "Sets the value of the specified user's property.\n <p>\n You can use this resource to store a custom data against the user identified by the key or by the id. The user\n who stores the data is required to have permissions to administer the user.\n </p>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/put_api_2_user_properties__propertyKey_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "findUsers": {
            "main": "./lib/actions/findUsers.js",
            "title": "Returns a list of users that match the search string. This resource cannot be accessed anonymously.",
            "description": "Returns a list of users that match the search string. This resource cannot be accessed anonymously.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/findUsers.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "findUsersWithBrowsePermission": {
            "main": "./lib/actions/findUsersWithBrowsePermission.js",
            "title": "Returns a list of active users that match the search string. This resource cannot be accessed anonymously \n and requires the Browse Users global permission.\n Given an issue key this resource will provide a list of users that match the search string and have\n the browse issue permission for the issue provided.",
            "description": "Returns a list of active users that match the search string. This resource cannot be accessed anonymously \n and requires the Browse Users global permission.\n Given an issue key this resource will provide a list of users that match the search string and have\n the browse issue permission for the issue provided.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/findUsersWithBrowsePermission.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createVersion": {
            "main": "./lib/actions/createVersion.js",
            "title": "Create a version via POST.",
            "description": "Create a version via POST.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createVersion.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getRemoteVersionLinks": {
            "main": "./lib/actions/getRemoteVersionLinks.js",
            "title": "Returns the remote version links for a given global ID.",
            "description": "Returns the remote version links for a given global ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getRemoteVersionLinks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_api_2_version__id_": {
            "main": "./lib/actions/delete_api_2_version__id_.js",
            "title": "Delete a project version.",
            "description": "Delete a project version.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_api_2_version__id_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getVersion": {
            "main": "./lib/actions/getVersion.js",
            "title": "Returns a project version.",
            "description": "Returns a project version.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getVersion.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updateVersion": {
            "main": "./lib/actions/updateVersion.js",
            "title": "Modify a version via PUT. Any fields present in the PUT will override existing values. As a convenience, if a field\n is not present, it is silently ignored.",
            "description": "Modify a version via PUT. Any fields present in the PUT will override existing values. As a convenience, if a field\n is not present, it is silently ignored.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updateVersion.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "merge": {
            "main": "./lib/actions/merge.js",
            "title": "Merge versions",
            "description": "Merge versions",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/merge.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "moveVersion": {
            "main": "./lib/actions/moveVersion.js",
            "title": "Modify a version's sequence within a project.\n <p/>\n The move version bean has 2 alternative field value pairs:\n <dl>\n <dt>position</dt><dd>An absolute position, which may have a value of 'First', 'Last', 'Earlier' or 'Later'</dd>\n <dt>after</dt><dd>A version to place this version after.  The value should be the self link of another version</dd>\n </dl>",
            "description": "Modify a version's sequence within a project.\n <p/>\n The move version bean has 2 alternative field value pairs:\n <dl>\n <dt>position</dt><dd>An absolute position, which may have a value of 'First', 'Last', 'Earlier' or 'Later'</dd>\n <dt>after</dt><dd>A version to place this version after.  The value should be the self link of another version</dd>\n </dl>",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/moveVersion.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getVersionRelatedIssues": {
            "main": "./lib/actions/getVersionRelatedIssues.js",
            "title": "Returns a bean containing the number of fixed in and affected issues for the given version.",
            "description": "Returns a bean containing the number of fixed in and affected issues for the given version.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getVersionRelatedIssues.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "post_api_2_version__id__removeAndSwap": {
            "main": "./lib/actions/post_api_2_version__id__removeAndSwap.js",
            "title": "Delete a project version.",
            "description": "Delete a project version.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/post_api_2_version__id__removeAndSwap.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getVersionUnresolvedIssues": {
            "main": "./lib/actions/getVersionUnresolvedIssues.js",
            "title": "Returns the number of unresolved issues for the given version",
            "description": "Returns the number of unresolved issues for the given version",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getVersionUnresolvedIssues.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteRemoteVersionLinksByVersionId": {
            "main": "./lib/actions/deleteRemoteVersionLinksByVersionId.js",
            "title": "Delete all remote version links for a given version ID.",
            "description": "Delete all remote version links for a given version ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteRemoteVersionLinksByVersionId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getRemoteVersionLinksByVersionId": {
            "main": "./lib/actions/getRemoteVersionLinksByVersionId.js",
            "title": "Returns the remote version links associated with the given version ID.",
            "description": "Returns the remote version links associated with the given version ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getRemoteVersionLinksByVersionId.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "post_api_2_version__versionId__remotelink": {
            "main": "./lib/actions/post_api_2_version__versionId__remotelink.js",
            "title": "Create a remote version link via POST.  The link's global ID will be taken from the\n JSON payload if provided; otherwise, it will be generated.",
            "description": "Create a remote version link via POST.  The link's global ID will be taken from the\n JSON payload if provided; otherwise, it will be generated.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/post_api_2_version__versionId__remotelink.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteRemoteVersionLink": {
            "main": "./lib/actions/deleteRemoteVersionLink.js",
            "title": "Delete a specific remote version link with the given version ID and global ID.",
            "description": "Delete a specific remote version link with the given version ID and global ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteRemoteVersionLink.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getRemoteVersionLink": {
            "main": "./lib/actions/getRemoteVersionLink.js",
            "title": "A REST sub-resource representing a remote version link",
            "description": "A REST sub-resource representing a remote version link",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getRemoteVersionLink.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "post_api_2_version__versionId__remotelink__globalId_": {
            "main": "./lib/actions/post_api_2_version__versionId__remotelink__globalId_.js",
            "title": "Create a remote version link via POST.  The link's global ID will be taken from the\n JSON payload if provided; otherwise, it will be generated.",
            "description": "Create a remote version link via POST.  The link's global ID will be taken from the\n JSON payload if provided; otherwise, it will be generated.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/post_api_2_version__versionId__remotelink__globalId_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getAllWorkflows": {
            "main": "./lib/actions/getAllWorkflows.js",
            "title": "Returns all workflows.",
            "description": "Returns all workflows.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getAllWorkflows.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_api_2_workflow_api_2_transitions__id__properties": {
            "main": "./lib/actions/delete_api_2_workflow_api_2_transitions__id__properties.js",
            "title": "Delete a property from the passed transition on the passed workflow. It is not an error to delete a property that\n does not exist.",
            "description": "Delete a property from the passed transition on the passed workflow. It is not an error to delete a property that\n does not exist.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_api_2_workflow_api_2_transitions__id__properties.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getProperties": {
            "main": "./lib/actions/getProperties.js",
            "title": "Return the property or properties associated with a transition.",
            "description": "Return the property or properties associated with a transition.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getProperties.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createProperty": {
            "main": "./lib/actions/createProperty.js",
            "title": "Add a new property to a transition. Trying to add a property that already\n exists will fail.",
            "description": "Add a new property to a transition. Trying to add a property that already\n exists will fail.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createProperty.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updateProperty": {
            "main": "./lib/actions/updateProperty.js",
            "title": "Update/add new property to a transition. Trying to update a property that does\n not exist will result in a new property being added.",
            "description": "Update/add new property to a transition. Trying to update a property that does\n not exist will result in a new property being added.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updateProperty.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createScheme": {
            "main": "./lib/actions/createScheme.js",
            "title": "Create a new workflow scheme.\n <p/>\n The body contains a representation of the new scheme. Values not passed are assumed to be set to their defaults.",
            "description": "Create a new workflow scheme.\n <p/>\n The body contains a representation of the new scheme. Values not passed are assumed to be set to their defaults.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createScheme.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteScheme": {
            "main": "./lib/actions/deleteScheme.js",
            "title": "Delete the passed workflow scheme.",
            "description": "Delete the passed workflow scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteScheme.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getById": {
            "main": "./lib/actions/getById.js",
            "title": "Returns the requested workflow scheme to the caller.",
            "description": "Returns the requested workflow scheme to the caller.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getById.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "update": {
            "main": "./lib/actions/update.js",
            "title": "Update the passed workflow scheme.\n <p/>\n The body of the request is a representation of the workflow scheme. Values not passed are assumed to indicate\n no change for that field.\n <p/>\n The passed representation can have its updateDraftIfNeeded flag set to true to indicate that the draft\n should be created and/or updated when the actual scheme cannot be edited (e.g. when the scheme is being used by\n a project). Values not appearing the body will not be touched.",
            "description": "Update the passed workflow scheme.\n <p/>\n The body of the request is a representation of the workflow scheme. Values not passed are assumed to indicate\n no change for that field.\n <p/>\n The passed representation can have its updateDraftIfNeeded flag set to true to indicate that the draft\n should be created and/or updated when the actual scheme cannot be edited (e.g. when the scheme is being used by\n a project). Values not appearing the body will not be touched.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/update.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "createDraftForParent": {
            "main": "./lib/actions/createDraftForParent.js",
            "title": "Create a draft for the passed scheme. The draft will be a copy of the state of the parent.",
            "description": "Create a draft for the passed scheme. The draft will be a copy of the state of the parent.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/createDraftForParent.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteDefault": {
            "main": "./lib/actions/deleteDefault.js",
            "title": "Remove the default workflow from the passed workflow scheme.",
            "description": "Remove the default workflow from the passed workflow scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteDefault.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getDefault": {
            "main": "./lib/actions/getDefault.js",
            "title": "Return the default workflow from the passed workflow scheme.",
            "description": "Return the default workflow from the passed workflow scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getDefault.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updateDefault": {
            "main": "./lib/actions/updateDefault.js",
            "title": "Set the default workflow for the passed workflow scheme.\n <p/>\n The passed representation can have its\n updateDraftIfNeeded flag set to true to indicate that the draft should be created/updated when the actual scheme\n cannot be edited.",
            "description": "Set the default workflow for the passed workflow scheme.\n <p/>\n The passed representation can have its\n updateDraftIfNeeded flag set to true to indicate that the draft should be created/updated when the actual scheme\n cannot be edited.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updateDefault.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteDraftById": {
            "main": "./lib/actions/deleteDraftById.js",
            "title": "Delete the passed draft workflow scheme.",
            "description": "Delete the passed draft workflow scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteDraftById.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getDraftById": {
            "main": "./lib/actions/getDraftById.js",
            "title": "Returns the requested draft workflow scheme to the caller.",
            "description": "Returns the requested draft workflow scheme to the caller.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getDraftById.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updateDraft": {
            "main": "./lib/actions/updateDraft.js",
            "title": "Update a draft workflow scheme. The draft will created if necessary.\n <p/>\n The body is a representation of the workflow scheme. Values not passed are assumed to indicate no change for that field.",
            "description": "Update a draft workflow scheme. The draft will created if necessary.\n <p/>\n The body is a representation of the workflow scheme. Values not passed are assumed to indicate no change for that field.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updateDraft.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteDraftDefault": {
            "main": "./lib/actions/deleteDraftDefault.js",
            "title": "Remove the default workflow from the passed draft workflow scheme.",
            "description": "Remove the default workflow from the passed draft workflow scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteDraftDefault.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getDraftDefault": {
            "main": "./lib/actions/getDraftDefault.js",
            "title": "Return the default workflow from the passed draft workflow scheme to the caller.",
            "description": "Return the default workflow from the passed draft workflow scheme to the caller.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getDraftDefault.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updateDraftDefault": {
            "main": "./lib/actions/updateDraftDefault.js",
            "title": "Set the default workflow for the passed draft workflow scheme.",
            "description": "Set the default workflow for the passed draft workflow scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updateDraftDefault.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteDraftIssueType": {
            "main": "./lib/actions/deleteDraftIssueType.js",
            "title": "Remove the specified issue type mapping from the draft scheme.",
            "description": "Remove the specified issue type mapping from the draft scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteDraftIssueType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getDraftIssueType": {
            "main": "./lib/actions/getDraftIssueType.js",
            "title": "Returns the issue type mapping for the passed draft workflow scheme.",
            "description": "Returns the issue type mapping for the passed draft workflow scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getDraftIssueType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "setDraftIssueType": {
            "main": "./lib/actions/setDraftIssueType.js",
            "title": "Set the issue type mapping for the passed draft scheme.\n <p/>\n The passed representation can have its updateDraftIfNeeded flag set to true to indicate that\n the draft should be created/updated when the actual scheme cannot be edited.",
            "description": "Set the issue type mapping for the passed draft scheme.\n <p/>\n The passed representation can have its updateDraftIfNeeded flag set to true to indicate that\n the draft should be created/updated when the actual scheme cannot be edited.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/setDraftIssueType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteDraftWorkflowMapping": {
            "main": "./lib/actions/deleteDraftWorkflowMapping.js",
            "title": "Delete the passed workflow from the draft workflow scheme.",
            "description": "Delete the passed workflow from the draft workflow scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteDraftWorkflowMapping.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getDraftWorkflow": {
            "main": "./lib/actions/getDraftWorkflow.js",
            "title": "Returns the draft workflow mappings or requested mapping to the caller.",
            "description": "Returns the draft workflow mappings or requested mapping to the caller.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getDraftWorkflow.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updateDraftWorkflowMapping": {
            "main": "./lib/actions/updateDraftWorkflowMapping.js",
            "title": "Update the draft scheme to include the passed mapping.\n <p/>\n The body is a representation of the workflow mapping.\n Values not passed are assumed to indicate no change for that field.",
            "description": "Update the draft scheme to include the passed mapping.\n <p/>\n The body is a representation of the workflow mapping.\n Values not passed are assumed to indicate no change for that field.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updateDraftWorkflowMapping.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "delete_api_2_workflowscheme__id__issuetype__issueType_": {
            "main": "./lib/actions/delete_api_2_workflowscheme__id__issuetype__issueType_.js",
            "title": "Remove the specified issue type mapping from the scheme.",
            "description": "Remove the specified issue type mapping from the scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/delete_api_2_workflowscheme__id__issuetype__issueType_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_api_2_workflowscheme__id__issuetype__issueType_": {
            "main": "./lib/actions/get_api_2_workflowscheme__id__issuetype__issueType_.js",
            "title": "Returns the issue type mapping for the passed workflow scheme.",
            "description": "Returns the issue type mapping for the passed workflow scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_api_2_workflowscheme__id__issuetype__issueType_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "setIssueType": {
            "main": "./lib/actions/setIssueType.js",
            "title": "Set the issue type mapping for the passed scheme.\n <p/>\n The passed representation can have its updateDraftIfNeeded flag set to true to indicate that\n the draft should be created/updated when the actual scheme cannot be edited.",
            "description": "Set the issue type mapping for the passed scheme.\n <p/>\n The passed representation can have its updateDraftIfNeeded flag set to true to indicate that\n the draft should be created/updated when the actual scheme cannot be edited.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/setIssueType.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "deleteWorkflowMapping": {
            "main": "./lib/actions/deleteWorkflowMapping.js",
            "title": "Delete the passed workflow from the workflow scheme.",
            "description": "Delete the passed workflow from the workflow scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/deleteWorkflowMapping.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getWorkflow": {
            "main": "./lib/actions/getWorkflow.js",
            "title": "Returns the workflow mappings or requested mapping to the caller for the passed scheme.",
            "description": "Returns the workflow mappings or requested mapping to the caller for the passed scheme.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getWorkflow.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "updateWorkflowMapping": {
            "main": "./lib/actions/updateWorkflowMapping.js",
            "title": "Update the scheme to include the passed mapping.\n <p/>\n The body is a representation of the workflow mapping.\n Values not passed are assumed to indicate no change for that field.\n <p/>\n The passed representation can have its updateDraftIfNeeded flag set to true to indicate that the draft\n should be created/updated when the actual scheme cannot be edited.",
            "description": "Update the scheme to include the passed mapping.\n <p/>\n The body is a representation of the workflow mapping.\n Values not passed are assumed to indicate no change for that field.\n <p/>\n The passed representation can have its updateDraftIfNeeded flag set to true to indicate that the draft\n should be created/updated when the actual scheme cannot be edited.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/updateWorkflowMapping.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getIdsOfWorklogsDeletedSince": {
            "main": "./lib/actions/getIdsOfWorklogsDeletedSince.js",
            "title": "Returns worklogs id and delete time of worklogs that was deleted since given time.\n The returns set of worklogs is limited to 1000 elements.\n This API will not return worklogs deleted during last minute.",
            "description": "Returns worklogs id and delete time of worklogs that was deleted since given time.\n The returns set of worklogs is limited to 1000 elements.\n This API will not return worklogs deleted during last minute.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getIdsOfWorklogsDeletedSince.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getWorklogsForIds": {
            "main": "./lib/actions/getWorklogsForIds.js",
            "title": "Returns worklogs for given worklog ids. Only worklogs to which the calling user has permissions, will be included in the result.\n The returns set of worklogs is limited to 1000 elements.",
            "description": "Returns worklogs for given worklog ids. Only worklogs to which the calling user has permissions, will be included in the result.\n The returns set of worklogs is limited to 1000 elements.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getWorklogsForIds.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "getIdsOfWorklogsModifiedSince": {
            "main": "./lib/actions/getIdsOfWorklogsModifiedSince.js",
            "title": "Returns worklogs id and update time of worklogs that was updated since given time.\n The returns set of worklogs is limited to 1000 elements.\n This API will not return worklogs updated during last minute.",
            "description": "Returns worklogs id and update time of worklogs that was updated since given time.\n The returns set of worklogs is limited to 1000 elements.\n This API will not return worklogs updated during last minute.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/getIdsOfWorklogsModifiedSince.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "logout": {
            "main": "./lib/actions/logout.js",
            "title": "Logs the current user out of JIRA, destroying the existing session, if any.",
            "description": "Logs the current user out of JIRA, destroying the existing session, if any.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/logout.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "currentUser": {
            "main": "./lib/actions/currentUser.js",
            "title": "Returns information about the currently authenticated user's session. If the caller is not authenticated they\n will get a 401 Unauthorized status code.",
            "description": "Returns information about the currently authenticated user's session. If the caller is not authenticated they\n will get a 401 Unauthorized status code.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/currentUser.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "login": {
            "main": "./lib/actions/login.js",
            "title": "Creates a new session for a user in JIRA. Once a session has been successfully created it can be used to access\n any of JIRA's remote APIs and also the web UI by passing the appropriate HTTP Cookie header.\n <p>\n Note that it is generally preferrable to use HTTP BASIC authentication with the REST API. However, this resource\n may be used to mimic the behaviour of JIRA's log-in page (e.g. to display log-in errors to a user).",
            "description": "Creates a new session for a user in JIRA. Once a session has been successfully created it can be used to access\n any of JIRA's remote APIs and also the web UI by passing the appropriate HTTP Cookie header.\n <p>\n Note that it is generally preferrable to use HTTP BASIC authentication with the REST API. However, this resource\n may be used to mimic the behaviour of JIRA's log-in page (e.g. to display log-in errors to a user).",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/login.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "release": {
            "main": "./lib/actions/release.js",
            "title": "This method invalidates the any current WebSudo session.",
            "description": "This method invalidates the any current WebSudo session.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/release.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}